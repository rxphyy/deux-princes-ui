{"ast":null,"code":"'use strict';\n\nconst {\n  PassThrough\n} = require('stream');\nmodule.exports = function /*streams...*/\n() {\n  var sources = [];\n  var output = new PassThrough({\n    objectMode: true\n  });\n  output.setMaxListeners(0);\n  output.add = add;\n  output.isEmpty = isEmpty;\n  output.on('unpipe', remove);\n  Array.prototype.slice.call(arguments).forEach(add);\n  return output;\n  function add(source) {\n    if (Array.isArray(source)) {\n      source.forEach(add);\n      return this;\n    }\n    sources.push(source);\n    source.once('end', remove.bind(null, source));\n    source.once('error', output.emit.bind(output, 'error'));\n    source.pipe(output, {\n      end: false\n    });\n    return this;\n  }\n  function isEmpty() {\n    return sources.length == 0;\n  }\n  function remove(source) {\n    sources = sources.filter(function (it) {\n      return it !== source;\n    });\n    if (!sources.length && output.readable) {\n      output.end();\n    }\n  }\n};","map":{"version":3,"names":["PassThrough","require","module","exports","sources","output","objectMode","setMaxListeners","add","isEmpty","on","remove","Array","prototype","slice","call","arguments","forEach","source","isArray","push","once","bind","emit","pipe","end","length","filter","it","readable"],"sources":["C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/merge-stream/index.js"],"sourcesContent":["'use strict';\n\nconst { PassThrough } = require('stream');\n\nmodule.exports = function (/*streams...*/) {\n  var sources = []\n  var output  = new PassThrough({objectMode: true})\n\n  output.setMaxListeners(0)\n\n  output.add = add\n  output.isEmpty = isEmpty\n\n  output.on('unpipe', remove)\n\n  Array.prototype.slice.call(arguments).forEach(add)\n\n  return output\n\n  function add (source) {\n    if (Array.isArray(source)) {\n      source.forEach(add)\n      return this\n    }\n\n    sources.push(source);\n    source.once('end', remove.bind(null, source))\n    source.once('error', output.emit.bind(output, 'error'))\n    source.pipe(output, {end: false})\n    return this\n  }\n\n  function isEmpty () {\n    return sources.length == 0;\n  }\n\n  function remove (source) {\n    sources = sources.filter(function (it) { return it !== source })\n    if (!sources.length && output.readable) { output.end() }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEzCC,MAAM,CAACC,OAAO,GAAG,SAAU;AAAA,GAAgB;EACzC,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,MAAM,GAAI,IAAIL,WAAW,CAAC;IAACM,UAAU,EAAE;EAAI,CAAC,CAAC;EAEjDD,MAAM,CAACE,eAAe,CAAC,CAAC,CAAC;EAEzBF,MAAM,CAACG,GAAG,GAAGA,GAAG;EAChBH,MAAM,CAACI,OAAO,GAAGA,OAAO;EAExBJ,MAAM,CAACK,EAAE,CAAC,QAAQ,EAAEC,MAAM,CAAC;EAE3BC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC,CAACC,OAAO,CAACT,GAAG,CAAC;EAElD,OAAOH,MAAM;EAEb,SAASG,GAAGA,CAAEU,MAAM,EAAE;IACpB,IAAIN,KAAK,CAACO,OAAO,CAACD,MAAM,CAAC,EAAE;MACzBA,MAAM,CAACD,OAAO,CAACT,GAAG,CAAC;MACnB,OAAO,IAAI;IACb;IAEAJ,OAAO,CAACgB,IAAI,CAACF,MAAM,CAAC;IACpBA,MAAM,CAACG,IAAI,CAAC,KAAK,EAAEV,MAAM,CAACW,IAAI,CAAC,IAAI,EAAEJ,MAAM,CAAC,CAAC;IAC7CA,MAAM,CAACG,IAAI,CAAC,OAAO,EAAEhB,MAAM,CAACkB,IAAI,CAACD,IAAI,CAACjB,MAAM,EAAE,OAAO,CAAC,CAAC;IACvDa,MAAM,CAACM,IAAI,CAACnB,MAAM,EAAE;MAACoB,GAAG,EAAE;IAAK,CAAC,CAAC;IACjC,OAAO,IAAI;EACb;EAEA,SAAShB,OAAOA,CAAA,EAAI;IAClB,OAAOL,OAAO,CAACsB,MAAM,IAAI,CAAC;EAC5B;EAEA,SAASf,MAAMA,CAAEO,MAAM,EAAE;IACvBd,OAAO,GAAGA,OAAO,CAACuB,MAAM,CAAC,UAAUC,EAAE,EAAE;MAAE,OAAOA,EAAE,KAAKV,MAAM;IAAC,CAAC,CAAC;IAChE,IAAI,CAACd,OAAO,CAACsB,MAAM,IAAIrB,MAAM,CAACwB,QAAQ,EAAE;MAAExB,MAAM,CAACoB,GAAG,CAAC,CAAC;IAAC;EACzD;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}