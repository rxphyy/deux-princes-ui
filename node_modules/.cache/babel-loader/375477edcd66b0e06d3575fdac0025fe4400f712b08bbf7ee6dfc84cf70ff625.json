{"ast":null,"code":"'use strict';\n\nconst shebangRegex = require('shebang-regex');\nmodule.exports = (string = '') => {\n  const match = string.match(shebangRegex);\n  if (!match) {\n    return null;\n  }\n  const [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n  const binary = path.split('/').pop();\n  if (binary === 'env') {\n    return argument;\n  }\n  return argument ? `${binary} ${argument}` : binary;\n};","map":{"version":3,"names":["shebangRegex","require","module","exports","string","match","path","argument","replace","split","binary","pop"],"sources":["C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/shebang-command/index.js"],"sourcesContent":["'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE7CC,MAAM,CAACC,OAAO,GAAG,CAACC,MAAM,GAAG,EAAE,KAAK;EACjC,MAAMC,KAAK,GAAGD,MAAM,CAACC,KAAK,CAACL,YAAY,CAAC;EAExC,IAAI,CAACK,KAAK,EAAE;IACX,OAAO,IAAI;EACZ;EAEA,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAChE,MAAMC,MAAM,GAAGJ,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAAC,CAAC;EAEpC,IAAID,MAAM,KAAK,KAAK,EAAE;IACrB,OAAOH,QAAQ;EAChB;EAEA,OAAOA,QAAQ,GAAI,GAAEG,MAAO,IAAGH,QAAS,EAAC,GAAGG,MAAM;AACnD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}