{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commandDocument = exports.ServiceWorkflow = void 0;\nconst bson_1 = require(\"bson\");\nconst utils_1 = require(\"../../../utils\");\nconst providers_1 = require(\"../providers\");\n/**\n * Common behaviour for OIDC device workflows.\n * @internal\n */\nclass ServiceWorkflow {\n  /**\n   * Execute the workflow. Looks for AWS_WEB_IDENTITY_TOKEN_FILE in the environment\n   * and then attempts to read the token from that path.\n   */\n  async execute(connection, credentials) {\n    const token = await this.getToken(credentials);\n    const command = commandDocument(token);\n    return connection.commandAsync((0, utils_1.ns)(credentials.source), command, undefined);\n  }\n  /**\n   * Get the document to add for speculative authentication.\n   */\n  async speculativeAuth(credentials) {\n    const token = await this.getToken(credentials);\n    const document = commandDocument(token);\n    document.db = credentials.source;\n    return {\n      speculativeAuthenticate: document\n    };\n  }\n}\nexports.ServiceWorkflow = ServiceWorkflow;\n/**\n * Create the saslStart command document.\n */\nfunction commandDocument(token) {\n  return {\n    saslStart: 1,\n    mechanism: providers_1.AuthMechanism.MONGODB_OIDC,\n    payload: bson_1.BSON.serialize({\n      jwt: token\n    })\n  };\n}\nexports.commandDocument = commandDocument;","map":{"version":3,"names":["bson_1","require","utils_1","providers_1","ServiceWorkflow","execute","connection","credentials","token","getToken","command","commandDocument","commandAsync","ns","source","undefined","speculativeAuth","document","db","speculativeAuthenticate","exports","saslStart","mechanism","AuthMechanism","MONGODB_OIDC","payload","BSON","serialize","jwt"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\cmap\\auth\\mongodb_oidc\\service_workflow.ts"],"sourcesContent":["import { BSON, type Document } from 'bson';\n\nimport { ns } from '../../../utils';\nimport type { Connection } from '../../connection';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport type { Workflow } from '../mongodb_oidc';\nimport { AuthMechanism } from '../providers';\n\n/**\n * Common behaviour for OIDC device workflows.\n * @internal\n */\nexport abstract class ServiceWorkflow implements Workflow {\n  /**\n   * Execute the workflow. Looks for AWS_WEB_IDENTITY_TOKEN_FILE in the environment\n   * and then attempts to read the token from that path.\n   */\n  async execute(connection: Connection, credentials: MongoCredentials): Promise<Document> {\n    const token = await this.getToken(credentials);\n    const command = commandDocument(token);\n    return connection.commandAsync(ns(credentials.source), command, undefined);\n  }\n\n  /**\n   * Get the document to add for speculative authentication.\n   */\n  async speculativeAuth(credentials: MongoCredentials): Promise<Document> {\n    const token = await this.getToken(credentials);\n    const document = commandDocument(token);\n    document.db = credentials.source;\n    return { speculativeAuthenticate: document };\n  }\n\n  /**\n   * Get the token from the environment or endpoint.\n   */\n  abstract getToken(credentials: MongoCredentials): Promise<string>;\n}\n\n/**\n * Create the saslStart command document.\n */\nexport function commandDocument(token: string): Document {\n  return {\n    saslStart: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: BSON.serialize({ jwt: token })\n  };\n}\n"],"mappings":";;;;;;AAAA,MAAAA,MAAA,GAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AAIA,MAAAE,WAAA,GAAAF,OAAA;AAEA;;;;AAIA,MAAsBG,eAAe;EACnC;;;;EAIA,MAAMC,OAAOA,CAACC,UAAsB,EAAEC,WAA6B;IACjE,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACC,QAAQ,CAACF,WAAW,CAAC;IAC9C,MAAMG,OAAO,GAAGC,eAAe,CAACH,KAAK,CAAC;IACtC,OAAOF,UAAU,CAACM,YAAY,CAAC,IAAAV,OAAA,CAAAW,EAAE,EAACN,WAAW,CAACO,MAAM,CAAC,EAAEJ,OAAO,EAAEK,SAAS,CAAC;EAC5E;EAEA;;;EAGA,MAAMC,eAAeA,CAACT,WAA6B;IACjD,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACC,QAAQ,CAACF,WAAW,CAAC;IAC9C,MAAMU,QAAQ,GAAGN,eAAe,CAACH,KAAK,CAAC;IACvCS,QAAQ,CAACC,EAAE,GAAGX,WAAW,CAACO,MAAM;IAChC,OAAO;MAAEK,uBAAuB,EAAEF;IAAQ,CAAE;EAC9C;;AAnBFG,OAAA,CAAAhB,eAAA,GAAAA,eAAA;AA2BA;;;AAGA,SAAgBO,eAAeA,CAACH,KAAa;EAC3C,OAAO;IACLa,SAAS,EAAE,CAAC;IACZC,SAAS,EAAEnB,WAAA,CAAAoB,aAAa,CAACC,YAAY;IACrCC,OAAO,EAAEzB,MAAA,CAAA0B,IAAI,CAACC,SAAS,CAAC;MAAEC,GAAG,EAAEpB;IAAK,CAAE;GACvC;AACH;AANAY,OAAA,CAAAT,eAAA,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}