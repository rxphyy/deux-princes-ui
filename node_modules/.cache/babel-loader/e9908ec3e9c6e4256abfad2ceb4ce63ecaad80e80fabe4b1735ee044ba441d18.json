{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst buffer_1 = require(\"buffer\");\n/**\n * Error strings\n */\nconst ERRORS = {\n  INVALID_ENCODING: 'Invalid encoding provided. Please specify a valid encoding the internal Node.js Buffer supports.',\n  INVALID_SMARTBUFFER_SIZE: 'Invalid size provided. Size must be a valid integer greater than zero.',\n  INVALID_SMARTBUFFER_BUFFER: 'Invalid Buffer provided in SmartBufferOptions.',\n  INVALID_SMARTBUFFER_OBJECT: 'Invalid SmartBufferOptions object supplied to SmartBuffer constructor or factory methods.',\n  INVALID_OFFSET: 'An invalid offset value was provided.',\n  INVALID_OFFSET_NON_NUMBER: 'An invalid offset value was provided. A numeric value is required.',\n  INVALID_LENGTH: 'An invalid length value was provided.',\n  INVALID_LENGTH_NON_NUMBER: 'An invalid length value was provived. A numeric value is required.',\n  INVALID_TARGET_OFFSET: 'Target offset is beyond the bounds of the internal SmartBuffer data.',\n  INVALID_TARGET_LENGTH: 'Specified length value moves cursor beyong the bounds of the internal SmartBuffer data.',\n  INVALID_READ_BEYOND_BOUNDS: 'Attempted to read beyond the bounds of the managed data.',\n  INVALID_WRITE_BEYOND_BOUNDS: 'Attempted to write beyond the bounds of the managed data.'\n};\nexports.ERRORS = ERRORS;\n/**\n * Checks if a given encoding is a valid Buffer encoding. (Throws an exception if check fails)\n *\n * @param { String } encoding The encoding string to check.\n */\nfunction checkEncoding(encoding) {\n  if (!buffer_1.Buffer.isEncoding(encoding)) {\n    throw new Error(ERRORS.INVALID_ENCODING);\n  }\n}\nexports.checkEncoding = checkEncoding;\n/**\n * Checks if a given number is a finite integer. (Throws an exception if check fails)\n *\n * @param { Number } value The number value to check.\n */\nfunction isFiniteInteger(value) {\n  return typeof value === 'number' && isFinite(value) && isInteger(value);\n}\nexports.isFiniteInteger = isFiniteInteger;\n/**\n * Checks if an offset/length value is valid. (Throws an exception if check fails)\n *\n * @param value The value to check.\n * @param offset True if checking an offset, false if checking a length.\n */\nfunction checkOffsetOrLengthValue(value, offset) {\n  if (typeof value === 'number') {\n    // Check for non finite/non integers\n    if (!isFiniteInteger(value) || value < 0) {\n      throw new Error(offset ? ERRORS.INVALID_OFFSET : ERRORS.INVALID_LENGTH);\n    }\n  } else {\n    throw new Error(offset ? ERRORS.INVALID_OFFSET_NON_NUMBER : ERRORS.INVALID_LENGTH_NON_NUMBER);\n  }\n}\n/**\n * Checks if a length value is valid. (Throws an exception if check fails)\n *\n * @param { Number } length The value to check.\n */\nfunction checkLengthValue(length) {\n  checkOffsetOrLengthValue(length, false);\n}\nexports.checkLengthValue = checkLengthValue;\n/**\n * Checks if a offset value is valid. (Throws an exception if check fails)\n *\n * @param { Number } offset The value to check.\n */\nfunction checkOffsetValue(offset) {\n  checkOffsetOrLengthValue(offset, true);\n}\nexports.checkOffsetValue = checkOffsetValue;\n/**\n * Checks if a target offset value is out of bounds. (Throws an exception if check fails)\n *\n * @param { Number } offset The offset value to check.\n * @param { SmartBuffer } buff The SmartBuffer instance to check against.\n */\nfunction checkTargetOffset(offset, buff) {\n  if (offset < 0 || offset > buff.length) {\n    throw new Error(ERRORS.INVALID_TARGET_OFFSET);\n  }\n}\nexports.checkTargetOffset = checkTargetOffset;\n/**\n * Determines whether a given number is a integer.\n * @param value The number to check.\n */\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Throws if Node.js version is too low to support bigint\n */\nfunction bigIntAndBufferInt64Check(bufferMethod) {\n  if (typeof BigInt === 'undefined') {\n    throw new Error('Platform does not support JS BigInt type.');\n  }\n  if (typeof buffer_1.Buffer.prototype[bufferMethod] === 'undefined') {\n    throw new Error(`Platform does not support Buffer.prototype.${bufferMethod}.`);\n  }\n}\nexports.bigIntAndBufferInt64Check = bigIntAndBufferInt64Check;","map":{"version":3,"names":["buffer_1","require","ERRORS","INVALID_ENCODING","INVALID_SMARTBUFFER_SIZE","INVALID_SMARTBUFFER_BUFFER","INVALID_SMARTBUFFER_OBJECT","INVALID_OFFSET","INVALID_OFFSET_NON_NUMBER","INVALID_LENGTH","INVALID_LENGTH_NON_NUMBER","INVALID_TARGET_OFFSET","INVALID_TARGET_LENGTH","INVALID_READ_BEYOND_BOUNDS","INVALID_WRITE_BEYOND_BOUNDS","exports","checkEncoding","encoding","Buffer","isEncoding","Error","isFiniteInteger","value","isFinite","isInteger","checkOffsetOrLengthValue","offset","checkLengthValue","length","checkOffsetValue","checkTargetOffset","buff","Math","floor","bigIntAndBufferInt64Check","bufferMethod","BigInt","prototype"],"sources":["../src/utils.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,MAAAA,QAAA,GAAAC,OAAA;AAEA;;;AAGA,MAAMC,MAAM,GAAG;EACbC,gBAAgB,EAAE,kGAAkG;EACpHC,wBAAwB,EAAE,wEAAwE;EAClGC,0BAA0B,EAAE,gDAAgD;EAC5EC,0BAA0B,EAAE,2FAA2F;EACvHC,cAAc,EAAE,uCAAuC;EACvDC,yBAAyB,EAAE,oEAAoE;EAC/FC,cAAc,EAAE,uCAAuC;EACvDC,yBAAyB,EAAE,oEAAoE;EAC/FC,qBAAqB,EAAE,sEAAsE;EAC7FC,qBAAqB,EAAE,yFAAyF;EAChHC,0BAA0B,EAAE,0DAA0D;EACtFC,2BAA2B,EAAE;CAC9B;AAuGCC,OAAA,CAAAb,MAAA,GAAAA,MAAA;AArGF;;;;;AAKA,SAASc,aAAaA,CAACC,QAAwB;EAC7C,IAAI,CAACjB,QAAA,CAAAkB,MAAM,CAACC,UAAU,CAACF,QAAQ,CAAC,EAAE;IAChC,MAAM,IAAIG,KAAK,CAAClB,MAAM,CAACC,gBAAgB,CAAC;;AAE5C;AA4F2BY,OAAA,CAAAC,aAAA,GAAAA,aAAA;AA1F3B;;;;;AAKA,SAASK,eAAeA,CAACC,KAAa;EACpC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIC,QAAQ,CAACD,KAAK,CAAC,IAAIE,SAAS,CAACF,KAAK,CAAC;AACzE;AAmFUP,OAAA,CAAAM,eAAA,GAAAA,eAAA;AAjFV;;;;;;AAMA,SAASI,wBAAwBA,CAACH,KAAU,EAAEI,MAAe;EAC3D,IAAI,OAAOJ,KAAK,KAAK,QAAQ,EAAE;IAC7B;IACA,IAAI,CAACD,eAAe,CAACC,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;MACxC,MAAM,IAAIF,KAAK,CAACM,MAAM,GAAGxB,MAAM,CAACK,cAAc,GAAGL,MAAM,CAACO,cAAc,CAAC;;GAE1E,MAAM;IACL,MAAM,IAAIW,KAAK,CAACM,MAAM,GAAGxB,MAAM,CAACM,yBAAyB,GAAGN,MAAM,CAACQ,yBAAyB,CAAC;;AAEjG;AAEA;;;;;AAKA,SAASiB,gBAAgBA,CAACC,MAAW;EACnCH,wBAAwB,CAACG,MAAM,EAAE,KAAK,CAAC;AACzC;AA0DEb,OAAA,CAAAY,gBAAA,GAAAA,gBAAA;AAxDF;;;;;AAKA,SAASE,gBAAgBA,CAACH,MAAW;EACnCD,wBAAwB,CAACC,MAAM,EAAE,IAAI,CAAC;AACxC;AAgD0CX,OAAA,CAAAc,gBAAA,GAAAA,gBAAA;AA9C1C;;;;;;AAMA,SAASC,iBAAiBA,CAACJ,MAAc,EAAEK,IAAiB;EAC1D,IAAIL,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAGK,IAAI,CAACH,MAAM,EAAE;IACtC,MAAM,IAAIR,KAAK,CAAClB,MAAM,CAACS,qBAAqB,CAAC;;AAEjD;AAqCoBI,OAAA,CAAAe,iBAAA,GAAAA,iBAAA;AAnCpB;;;;AAIA,SAASN,SAASA,CAACF,KAAa;EAC9B,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIC,QAAQ,CAACD,KAAK,CAAC,IAAIU,IAAI,CAACC,KAAK,CAACX,KAAK,CAAC,KAAKA,KAAK;AACpF;AAcA;;;AAGA,SAASY,yBAAyBA,CAACC,YAA0B;EAC3D,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,MAAM,IAAIhB,KAAK,CAAC,2CAA2C,CAAC;;EAG9D,IAAI,OAAOpB,QAAA,CAAAkB,MAAM,CAACmB,SAAS,CAACF,YAAY,CAAC,KAAK,WAAW,EAAE;IACzD,MAAM,IAAIf,KAAK,CAAC,8CAA8Ce,YAAY,GAAG,CAAC;;AAElF;AAIuCpB,OAAA,CAAAmB,yBAAA,GAAAA,yBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}