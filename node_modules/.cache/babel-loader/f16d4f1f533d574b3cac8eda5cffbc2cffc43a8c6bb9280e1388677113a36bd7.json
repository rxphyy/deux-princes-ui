{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReadConcern = exports.ReadConcernLevel = void 0;\n/** @public */\nexports.ReadConcernLevel = Object.freeze({\n  local: 'local',\n  majority: 'majority',\n  linearizable: 'linearizable',\n  available: 'available',\n  snapshot: 'snapshot'\n});\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/read-concern/index.html\n */\nclass ReadConcern {\n  /** Constructs a ReadConcern from the read concern level.*/\n  constructor(level) {\n    /**\n     * A spec test exists that allows level to be any string.\n     * \"invalid readConcern with out stage\"\n     * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n     * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#unknown-levels-and-additional-options-for-string-based-readconcerns\n     */\n    this.level = exports.ReadConcernLevel[level] ?? level;\n  }\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param options - The options object from which to extract the write concern.\n   */\n  static fromOptions(options) {\n    if (options == null) {\n      return;\n    }\n    if (options.readConcern) {\n      const {\n        readConcern\n      } = options;\n      if (readConcern instanceof ReadConcern) {\n        return readConcern;\n      } else if (typeof readConcern === 'string') {\n        return new ReadConcern(readConcern);\n      } else if ('level' in readConcern && readConcern.level) {\n        return new ReadConcern(readConcern.level);\n      }\n    }\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n    return;\n  }\n  static get MAJORITY() {\n    return exports.ReadConcernLevel.majority;\n  }\n  static get AVAILABLE() {\n    return exports.ReadConcernLevel.available;\n  }\n  static get LINEARIZABLE() {\n    return exports.ReadConcernLevel.linearizable;\n  }\n  static get SNAPSHOT() {\n    return exports.ReadConcernLevel.snapshot;\n  }\n  toJSON() {\n    return {\n      level: this.level\n    };\n  }\n}\nexports.ReadConcern = ReadConcern;","map":{"version":3,"names":["exports","ReadConcernLevel","Object","freeze","local","majority","linearizable","available","snapshot","ReadConcern","constructor","level","fromOptions","options","readConcern","MAJORITY","AVAILABLE","LINEARIZABLE","SNAPSHOT","toJSON"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\read_concern.ts"],"sourcesContent":["import type { Document } from './bson';\n\n/** @public */\nexport const ReadConcernLevel = Object.freeze({\n  local: 'local',\n  majority: 'majority',\n  linearizable: 'linearizable',\n  available: 'available',\n  snapshot: 'snapshot'\n} as const);\n\n/** @public */\nexport type ReadConcernLevel = (typeof ReadConcernLevel)[keyof typeof ReadConcernLevel];\n\n/** @public */\nexport type ReadConcernLike = ReadConcern | { level: ReadConcernLevel } | ReadConcernLevel;\n\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/read-concern/index.html\n */\nexport class ReadConcern {\n  level: ReadConcernLevel | string;\n\n  /** Constructs a ReadConcern from the read concern level.*/\n  constructor(level: ReadConcernLevel) {\n    /**\n     * A spec test exists that allows level to be any string.\n     * \"invalid readConcern with out stage\"\n     * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n     * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#unknown-levels-and-additional-options-for-string-based-readconcerns\n     */\n    this.level = ReadConcernLevel[level] ?? level;\n  }\n\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param options - The options object from which to extract the write concern.\n   */\n  static fromOptions(options?: {\n    readConcern?: ReadConcernLike;\n    level?: ReadConcernLevel;\n  }): ReadConcern | undefined {\n    if (options == null) {\n      return;\n    }\n\n    if (options.readConcern) {\n      const { readConcern } = options;\n      if (readConcern instanceof ReadConcern) {\n        return readConcern;\n      } else if (typeof readConcern === 'string') {\n        return new ReadConcern(readConcern);\n      } else if ('level' in readConcern && readConcern.level) {\n        return new ReadConcern(readConcern.level);\n      }\n    }\n\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n    return;\n  }\n\n  static get MAJORITY(): 'majority' {\n    return ReadConcernLevel.majority;\n  }\n\n  static get AVAILABLE(): 'available' {\n    return ReadConcernLevel.available;\n  }\n\n  static get LINEARIZABLE(): 'linearizable' {\n    return ReadConcernLevel.linearizable;\n  }\n\n  static get SNAPSHOT(): 'snapshot' {\n    return ReadConcernLevel.snapshot;\n  }\n\n  toJSON(): Document {\n    return { level: this.level };\n  }\n}\n"],"mappings":";;;;;;AAEA;AACaA,OAAA,CAAAC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC5CC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,UAAU;EACpBC,YAAY,EAAE,cAAc;EAC5BC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE;CACF,CAAC;AAQX;;;;;;;AAOA,MAAaC,WAAW;EAGtB;EACAC,YAAYC,KAAuB;IACjC;;;;;;IAMA,IAAI,CAACA,KAAK,GAAGX,OAAA,CAAAC,gBAAgB,CAACU,KAAK,CAAC,IAAIA,KAAK;EAC/C;EAEA;;;;;EAKA,OAAOC,WAAWA,CAACC,OAGlB;IACC,IAAIA,OAAO,IAAI,IAAI,EAAE;MACnB;;IAGF,IAAIA,OAAO,CAACC,WAAW,EAAE;MACvB,MAAM;QAAEA;MAAW,CAAE,GAAGD,OAAO;MAC/B,IAAIC,WAAW,YAAYL,WAAW,EAAE;QACtC,OAAOK,WAAW;OACnB,MAAM,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;QAC1C,OAAO,IAAIL,WAAW,CAACK,WAAW,CAAC;OACpC,MAAM,IAAI,OAAO,IAAIA,WAAW,IAAIA,WAAW,CAACH,KAAK,EAAE;QACtD,OAAO,IAAIF,WAAW,CAACK,WAAW,CAACH,KAAK,CAAC;;;IAI7C,IAAIE,OAAO,CAACF,KAAK,EAAE;MACjB,OAAO,IAAIF,WAAW,CAACI,OAAO,CAACF,KAAK,CAAC;;IAEvC;EACF;EAEA,WAAWI,QAAQA,CAAA;IACjB,OAAOf,OAAA,CAAAC,gBAAgB,CAACI,QAAQ;EAClC;EAEA,WAAWW,SAASA,CAAA;IAClB,OAAOhB,OAAA,CAAAC,gBAAgB,CAACM,SAAS;EACnC;EAEA,WAAWU,YAAYA,CAAA;IACrB,OAAOjB,OAAA,CAAAC,gBAAgB,CAACK,YAAY;EACtC;EAEA,WAAWY,QAAQA,CAAA;IACjB,OAAOlB,OAAA,CAAAC,gBAAgB,CAACO,QAAQ;EAClC;EAEAW,MAAMA,CAAA;IACJ,OAAO;MAAER,KAAK,EAAE,IAAI,CAACA;IAAK,CAAE;EAC9B;;AA9DFX,OAAA,CAAAS,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}