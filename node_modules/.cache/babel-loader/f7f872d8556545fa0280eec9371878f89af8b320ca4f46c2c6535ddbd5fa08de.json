{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KillCursorsOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\nclass KillCursorsOperation extends operation_1.AbstractOperation {\n  constructor(cursorId, ns, server, options) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n  async execute(server, session) {\n    if (server !== this.server) {\n      throw new error_1.MongoRuntimeError('Killcursor must run on the same server operation began on');\n    }\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      throw new error_1.MongoRuntimeError('A collection name must be determined before killCursors');\n    }\n    const killCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n    try {\n      await server.commandAsync(this.ns, killCursorsCommand, {\n        session\n      });\n    } catch {\n      // The driver should never emit errors from killCursors, this is spec-ed behavior\n    }\n  }\n}\nexports.KillCursorsOperation = KillCursorsOperation;\n(0, operation_1.defineAspects)(KillCursorsOperation, [operation_1.Aspect.MUST_SELECT_SAME_SERVER]);","map":{"version":3,"names":["error_1","require","operation_1","KillCursorsOperation","AbstractOperation","constructor","cursorId","ns","server","options","execute","session","MongoRuntimeError","killCursors","collection","killCursorsCommand","cursors","commandAsync","exports","defineAspects","Aspect","MUST_SELECT_SAME_SERVER"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\operations\\kill_cursors.ts"],"sourcesContent":["import type { Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { MongoDBNamespace } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, type OperationOptions } from './operation';\n\n/**\n * https://www.mongodb.com/docs/manual/reference/command/killCursors/\n * @internal\n */\ninterface KillCursorsCommand {\n  killCursors: string;\n  cursors: Long[];\n  comment?: unknown;\n}\n\nexport class KillCursorsOperation extends AbstractOperation {\n  cursorId: Long;\n\n  constructor(cursorId: Long, ns: MongoDBNamespace, server: Server, options: OperationOptions) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<void> {\n    if (server !== this.server) {\n      throw new MongoRuntimeError('Killcursor must run on the same server operation began on');\n    }\n\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      throw new MongoRuntimeError('A collection name must be determined before killCursors');\n    }\n\n    const killCursorsCommand: KillCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n    try {\n      await server.commandAsync(this.ns, killCursorsCommand, { session });\n    } catch {\n      // The driver should never emit errors from killCursors, this is spec-ed behavior\n    }\n  }\n}\n\ndefineAspects(KillCursorsOperation, [Aspect.MUST_SELECT_SAME_SERVER]);\n"],"mappings":";;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAIA,MAAAC,WAAA,GAAAD,OAAA;AAYA,MAAaE,oBAAqB,SAAQD,WAAA,CAAAE,iBAAiB;EAGzDC,YAAYC,QAAc,EAAEC,EAAoB,EAAEC,MAAc,EAAEC,OAAyB;IACzF,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACF,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,MAAM,GAAGA,MAAM;EACtB;EAES,MAAME,OAAOA,CAACF,MAAc,EAAEG,OAAkC;IACvE,IAAIH,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;MAC1B,MAAM,IAAIR,OAAA,CAAAY,iBAAiB,CAAC,2DAA2D,CAAC;;IAG1F,MAAMC,WAAW,GAAG,IAAI,CAACN,EAAE,CAACO,UAAU;IACtC,IAAID,WAAW,IAAI,IAAI,EAAE;MACvB;MACA;MACA,MAAM,IAAIb,OAAA,CAAAY,iBAAiB,CAAC,yDAAyD,CAAC;;IAGxF,MAAMG,kBAAkB,GAAuB;MAC7CF,WAAW;MACXG,OAAO,EAAE,CAAC,IAAI,CAACV,QAAQ;KACxB;IACD,IAAI;MACF,MAAME,MAAM,CAACS,YAAY,CAAC,IAAI,CAACV,EAAE,EAAEQ,kBAAkB,EAAE;QAAEJ;MAAO,CAAE,CAAC;KACpE,CAAC,MAAM;MACN;IAAA;EAEJ;;AA/BFO,OAAA,CAAAf,oBAAA,GAAAA,oBAAA;AAkCA,IAAAD,WAAA,CAAAiB,aAAa,EAAChB,oBAAoB,EAAE,CAACD,WAAA,CAAAkB,MAAM,CAACC,uBAAuB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}