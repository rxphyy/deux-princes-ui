{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountDocumentsOperation = void 0;\nconst aggregate_1 = require(\"./aggregate\");\n/** @internal */\nclass CountDocumentsOperation extends aggregate_1.AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [];\n    pipeline.push({\n      $match: query\n    });\n    if (typeof options.skip === 'number') {\n      pipeline.push({\n        $skip: options.skip\n      });\n    }\n    if (typeof options.limit === 'number') {\n      pipeline.push({\n        $limit: options.limit\n      });\n    }\n    pipeline.push({\n      $group: {\n        _id: 1,\n        n: {\n          $sum: 1\n        }\n      }\n    });\n    super(collection.s.namespace, pipeline, options);\n  }\n  async execute(server, session) {\n    const result = await super.execute(server, session);\n    // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n    const response = result;\n    if (response.cursor == null || response.cursor.firstBatch == null) {\n      return 0;\n    }\n    const docs = response.cursor.firstBatch;\n    return docs.length ? docs[0].n : 0;\n  }\n}\nexports.CountDocumentsOperation = CountDocumentsOperation;","map":{"version":3,"names":["aggregate_1","require","CountDocumentsOperation","AggregateOperation","constructor","collection","query","options","pipeline","push","$match","skip","$skip","limit","$limit","$group","_id","n","$sum","s","namespace","execute","server","session","result","response","cursor","firstBatch","docs","length","exports"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\operations\\count_documents.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { AggregateOperation, type AggregateOptions } from './aggregate';\n\n/** @public */\nexport interface CountDocumentsOptions extends AggregateOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amounts to count before aborting. */\n  limit?: number;\n}\n\n/** @internal */\nexport class CountDocumentsOperation extends AggregateOperation<number> {\n  constructor(collection: Collection, query: Document, options: CountDocumentsOptions) {\n    const pipeline = [];\n    pipeline.push({ $match: query });\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({ $skip: options.skip });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({ $limit: options.limit });\n    }\n\n    pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n\n    super(collection.s.namespace, pipeline, options);\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<number> {\n    const result = await super.execute(server, session);\n\n    // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n    const response = result as unknown as Document;\n    if (response.cursor == null || response.cursor.firstBatch == null) {\n      return 0;\n    }\n\n    const docs = response.cursor.firstBatch;\n    return docs.length ? docs[0].n : 0;\n  }\n}\n"],"mappings":";;;;;;AAIA,MAAAA,WAAA,GAAAC,OAAA;AAUA;AACA,MAAaC,uBAAwB,SAAQF,WAAA,CAAAG,kBAA0B;EACrEC,YAAYC,UAAsB,EAAEC,KAAe,EAAEC,OAA8B;IACjF,MAAMC,QAAQ,GAAG,EAAE;IACnBA,QAAQ,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEJ;IAAK,CAAE,CAAC;IAEhC,IAAI,OAAOC,OAAO,CAACI,IAAI,KAAK,QAAQ,EAAE;MACpCH,QAAQ,CAACC,IAAI,CAAC;QAAEG,KAAK,EAAEL,OAAO,CAACI;MAAI,CAAE,CAAC;;IAGxC,IAAI,OAAOJ,OAAO,CAACM,KAAK,KAAK,QAAQ,EAAE;MACrCL,QAAQ,CAACC,IAAI,CAAC;QAAEK,MAAM,EAAEP,OAAO,CAACM;MAAK,CAAE,CAAC;;IAG1CL,QAAQ,CAACC,IAAI,CAAC;MAAEM,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAEC,CAAC,EAAE;UAAEC,IAAI,EAAE;QAAC;MAAE;IAAE,CAAE,CAAC;IAErD,KAAK,CAACb,UAAU,CAACc,CAAC,CAACC,SAAS,EAAEZ,QAAQ,EAAED,OAAO,CAAC;EAClD;EAES,MAAMc,OAAOA,CAACC,MAAc,EAAEC,OAAkC;IACvE,MAAMC,MAAM,GAAG,MAAM,KAAK,CAACH,OAAO,CAACC,MAAM,EAAEC,OAAO,CAAC;IAEnD;IACA,MAAME,QAAQ,GAAGD,MAA6B;IAC9C,IAAIC,QAAQ,CAACC,MAAM,IAAI,IAAI,IAAID,QAAQ,CAACC,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;MACjE,OAAO,CAAC;;IAGV,MAAMC,IAAI,GAAGH,QAAQ,CAACC,MAAM,CAACC,UAAU;IACvC,OAAOC,IAAI,CAACC,MAAM,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACX,CAAC,GAAG,CAAC;EACpC;;AA7BFa,OAAA,CAAA5B,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}