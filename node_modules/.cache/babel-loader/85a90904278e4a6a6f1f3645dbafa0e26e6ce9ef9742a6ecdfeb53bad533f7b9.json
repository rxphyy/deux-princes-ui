{"ast":null,"code":"'use strict';\n\nconst mimicFn = require('mimic-fn');\nconst calledFunctions = new WeakMap();\nconst onetime = (function_, options = {}) => {\n  if (typeof function_ !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  let returnValue;\n  let callCount = 0;\n  const functionName = function_.displayName || function_.name || '<anonymous>';\n  const onetime = function (...arguments_) {\n    calledFunctions.set(onetime, ++callCount);\n    if (callCount === 1) {\n      returnValue = function_.apply(this, arguments_);\n      function_ = null;\n    } else if (options.throw === true) {\n      throw new Error(`Function \\`${functionName}\\` can only be called once`);\n    }\n    return returnValue;\n  };\n  mimicFn(onetime, function_);\n  calledFunctions.set(onetime, callCount);\n  return onetime;\n};\nmodule.exports = onetime;\n// TODO: Remove this for the next major release\nmodule.exports.default = onetime;\nmodule.exports.callCount = function_ => {\n  if (!calledFunctions.has(function_)) {\n    throw new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n  }\n  return calledFunctions.get(function_);\n};","map":{"version":3,"names":["mimicFn","require","calledFunctions","WeakMap","onetime","function_","options","TypeError","returnValue","callCount","functionName","displayName","name","arguments_","set","apply","throw","Error","module","exports","default","has","get"],"sources":["C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/onetime/index.js"],"sourcesContent":["'use strict';\nconst mimicFn = require('mimic-fn');\n\nconst calledFunctions = new WeakMap();\n\nconst onetime = (function_, options = {}) => {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet returnValue;\n\tlet callCount = 0;\n\tconst functionName = function_.displayName || function_.name || '<anonymous>';\n\n\tconst onetime = function (...arguments_) {\n\t\tcalledFunctions.set(onetime, ++callCount);\n\n\t\tif (callCount === 1) {\n\t\t\treturnValue = function_.apply(this, arguments_);\n\t\t\tfunction_ = null;\n\t\t} else if (options.throw === true) {\n\t\t\tthrow new Error(`Function \\`${functionName}\\` can only be called once`);\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\tmimicFn(onetime, function_);\n\tcalledFunctions.set(onetime, callCount);\n\n\treturn onetime;\n};\n\nmodule.exports = onetime;\n// TODO: Remove this for the next major release\nmodule.exports.default = onetime;\n\nmodule.exports.callCount = function_ => {\n\tif (!calledFunctions.has(function_)) {\n\t\tthrow new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n\t}\n\n\treturn calledFunctions.get(function_);\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEnC,MAAMC,eAAe,GAAG,IAAIC,OAAO,CAAC,CAAC;AAErC,MAAMC,OAAO,GAAGA,CAACC,SAAS,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC5C,IAAI,OAAOD,SAAS,KAAK,UAAU,EAAE;IACpC,MAAM,IAAIE,SAAS,CAAC,qBAAqB,CAAC;EAC3C;EAEA,IAAIC,WAAW;EACf,IAAIC,SAAS,GAAG,CAAC;EACjB,MAAMC,YAAY,GAAGL,SAAS,CAACM,WAAW,IAAIN,SAAS,CAACO,IAAI,IAAI,aAAa;EAE7E,MAAMR,OAAO,GAAG,SAAAA,CAAU,GAAGS,UAAU,EAAE;IACxCX,eAAe,CAACY,GAAG,CAACV,OAAO,EAAE,EAAEK,SAAS,CAAC;IAEzC,IAAIA,SAAS,KAAK,CAAC,EAAE;MACpBD,WAAW,GAAGH,SAAS,CAACU,KAAK,CAAC,IAAI,EAAEF,UAAU,CAAC;MAC/CR,SAAS,GAAG,IAAI;IACjB,CAAC,MAAM,IAAIC,OAAO,CAACU,KAAK,KAAK,IAAI,EAAE;MAClC,MAAM,IAAIC,KAAK,CAAE,cAAaP,YAAa,4BAA2B,CAAC;IACxE;IAEA,OAAOF,WAAW;EACnB,CAAC;EAEDR,OAAO,CAACI,OAAO,EAAEC,SAAS,CAAC;EAC3BH,eAAe,CAACY,GAAG,CAACV,OAAO,EAAEK,SAAS,CAAC;EAEvC,OAAOL,OAAO;AACf,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAGf,OAAO;AACxB;AACAc,MAAM,CAACC,OAAO,CAACC,OAAO,GAAGhB,OAAO;AAEhCc,MAAM,CAACC,OAAO,CAACV,SAAS,GAAGJ,SAAS,IAAI;EACvC,IAAI,CAACH,eAAe,CAACmB,GAAG,CAAChB,SAAS,CAAC,EAAE;IACpC,MAAM,IAAIY,KAAK,CAAE,wBAAuBZ,SAAS,CAACO,IAAK,8CAA6C,CAAC;EACtG;EAEA,OAAOV,eAAe,CAACoB,GAAG,CAACjB,SAAS,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}