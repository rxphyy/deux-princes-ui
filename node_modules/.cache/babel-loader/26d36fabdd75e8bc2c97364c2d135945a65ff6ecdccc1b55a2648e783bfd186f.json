{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListDatabasesOperation = void 0;\nvar utils_1 = require(\"../utils\");\nvar command_1 = require(\"./command\");\nvar operation_1 = require(\"./operation\");\n/** @internal */\nvar ListDatabasesOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(ListDatabasesOperation, _command_1$CommandOpe);\n  var _super = _createSuper(ListDatabasesOperation);\n  function ListDatabasesOperation(db, options) {\n    var _this;\n    _classCallCheck(this, ListDatabasesOperation);\n    _this = _super.call(this, db, options);\n    _this.options = options !== null && options !== void 0 ? options : {};\n    _this.ns = new utils_1.MongoDBNamespace('admin', '$cmd');\n    return _this;\n  }\n  _createClass(ListDatabasesOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(server, session) {\n        var cmd;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              cmd = {\n                listDatabases: 1\n              };\n              if (typeof this.options.nameOnly === 'boolean') {\n                cmd.nameOnly = this.options.nameOnly;\n              }\n              if (this.options.filter) {\n                cmd.filter = this.options.filter;\n              }\n              if (typeof this.options.authorizedDatabases === 'boolean') {\n                cmd.authorizedDatabases = this.options.authorizedDatabases;\n              }\n              // we check for undefined specifically here to allow falsy values\n              // eslint-disable-next-line no-restricted-syntax\n              if ((0, utils_1.maxWireVersion)(server) >= 9 && this.options.comment !== undefined) {\n                cmd.comment = this.options.comment;\n              }\n              return _context.abrupt(\"return\", _get(_getPrototypeOf(ListDatabasesOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return ListDatabasesOperation;\n}(command_1.CommandOperation);\nexports.ListDatabasesOperation = ListDatabasesOperation;\n(0, operation_1.defineAspects)(ListDatabasesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":{"version":3,"names":["utils_1","require","command_1","operation_1","ListDatabasesOperation","_command_1$CommandOpe","_inherits","_super","_createSuper","db","options","_this","_classCallCheck","call","ns","MongoDBNamespace","_createClass","key","value","_execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","server","session","cmd","wrap","_callee$","_context","prev","next","listDatabases","nameOnly","filter","authorizedDatabases","maxWireVersion","comment","undefined","abrupt","_get","_getPrototypeOf","prototype","stop","execute","_x","_x2","apply","arguments","CommandOperation","exports","defineAspects","Aspect","READ_OPERATION","RETRYABLE"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\operations\\list_databases.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { type TODO_NODE_3286 } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { maxWireVersion, MongoDBNamespace } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface ListDatabasesResult {\n  databases: ({ name: string; sizeOnDisk?: number; empty?: boolean } & Document)[];\n  totalSize?: number;\n  totalSizeMb?: number;\n  ok: 1 | 0;\n}\n\n/** @public */\nexport interface ListDatabasesOptions extends CommandOperationOptions {\n  /** A query predicate that determines which databases are listed */\n  filter?: Document;\n  /** A flag to indicate whether the command should return just the database names, or return both database names and size information */\n  nameOnly?: boolean;\n  /** A flag that determines which databases are returned based on the user privileges when access control is enabled */\n  authorizedDatabases?: boolean;\n}\n\n/** @internal */\nexport class ListDatabasesOperation extends CommandOperation<ListDatabasesResult> {\n  override options: ListDatabasesOptions;\n\n  constructor(db: Db, options?: ListDatabasesOptions) {\n    super(db, options);\n    this.options = options ?? {};\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined\n  ): Promise<ListDatabasesResult> {\n    const cmd: Document = { listDatabases: 1 };\n\n    if (typeof this.options.nameOnly === 'boolean') {\n      cmd.nameOnly = this.options.nameOnly;\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (maxWireVersion(server) >= 9 && this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    return super.executeCommand(server, session, cmd) as TODO_NODE_3286;\n  }\n}\n\ndefineAspects(ListDatabasesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n"],"mappings":";;;;;;;;;;;;;;AAKA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAoBA;AAAA,IACaG,sBAAuB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,sBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,sBAAA;EAGlC,SAAAA,uBAAYK,EAAM,EAAEC,OAA8B;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,sBAAA;IAChDO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMJ,EAAE,EAAEC,OAAO;IACjBC,KAAA,CAAKD,OAAO,GAAGA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;IAC5BC,KAAA,CAAKG,EAAE,GAAG,IAAId,OAAA,CAAAe,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC;IAAC,OAAAJ,KAAA;EAClD;EAACK,YAAA,CAAAZ,sBAAA;IAAAa,GAAA;IAAAC,KAAA;MAAA,IAAAC,QAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAEQ,SAAAC,QACPC,MAAc,EACdC,OAAkC;QAAA,IAAAC,GAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAE5BL,GAAG,GAAa;gBAAEM,aAAa,EAAE;cAAC,CAAE;cAE1C,IAAI,OAAO,IAAI,CAACtB,OAAO,CAACuB,QAAQ,KAAK,SAAS,EAAE;gBAC9CP,GAAG,CAACO,QAAQ,GAAG,IAAI,CAACvB,OAAO,CAACuB,QAAQ;;cAGtC,IAAI,IAAI,CAACvB,OAAO,CAACwB,MAAM,EAAE;gBACvBR,GAAG,CAACQ,MAAM,GAAG,IAAI,CAACxB,OAAO,CAACwB,MAAM;;cAGlC,IAAI,OAAO,IAAI,CAACxB,OAAO,CAACyB,mBAAmB,KAAK,SAAS,EAAE;gBACzDT,GAAG,CAACS,mBAAmB,GAAG,IAAI,CAACzB,OAAO,CAACyB,mBAAmB;;cAG5D;cACA;cACA,IAAI,IAAAnC,OAAA,CAAAoC,cAAc,EAACZ,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAACd,OAAO,CAAC2B,OAAO,KAAKC,SAAS,EAAE;gBACrEZ,GAAG,CAACW,OAAO,GAAG,IAAI,CAAC3B,OAAO,CAAC2B,OAAO;;cACnC,OAAAR,QAAA,CAAAU,MAAA,WAAAC,IAAA,CAAAC,eAAA,CAAArC,sBAAA,CAAAsC,SAAA,2BAAA7B,IAAA,OAE2BW,MAAM,EAAEC,OAAO,EAAEC,GAAG;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAApB,OAAA;MAAA,CACjD;MAAA,SAAAqB,QAAAC,EAAA,EAAAC,GAAA;QAAA,OAAA3B,QAAA,CAAA4B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,OAAA;IAAA;EAAA;EAAA,OAAAxC,sBAAA;AAAA,EAlCyCF,SAAA,CAAA+C,gBAAqC;AAAjFC,OAAA,CAAA9C,sBAAA,GAAAA,sBAAA;AAqCA,IAAAD,WAAA,CAAAgD,aAAa,EAAC/C,sBAAsB,EAAE,CAACD,WAAA,CAAAiD,MAAM,CAACC,cAAc,EAAElD,WAAA,CAAAiD,MAAM,CAACE,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}