{"ast":null,"code":"'use strict';\n\nconst aliases = ['stdin', 'stdout', 'stderr'];\nconst hasAlias = options => aliases.some(alias => options[alias] !== undefined);\nconst normalizeStdio = options => {\n  if (!options) {\n    return;\n  }\n  const {\n    stdio\n  } = options;\n  if (stdio === undefined) {\n    return aliases.map(alias => options[alias]);\n  }\n  if (hasAlias(options)) {\n    throw new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${aliases.map(alias => `\\`${alias}\\``).join(', ')}`);\n  }\n  if (typeof stdio === 'string') {\n    return stdio;\n  }\n  if (!Array.isArray(stdio)) {\n    throw new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n  }\n  const length = Math.max(stdio.length, aliases.length);\n  return Array.from({\n    length\n  }, (value, index) => stdio[index]);\n};\nmodule.exports = normalizeStdio;\n\n// `ipc` is pushed unless it is already present\nmodule.exports.node = options => {\n  const stdio = normalizeStdio(options);\n  if (stdio === 'ipc') {\n    return 'ipc';\n  }\n  if (stdio === undefined || typeof stdio === 'string') {\n    return [stdio, stdio, stdio, 'ipc'];\n  }\n  if (stdio.includes('ipc')) {\n    return stdio;\n  }\n  return [...stdio, 'ipc'];\n};","map":{"version":3,"names":["aliases","hasAlias","options","some","alias","undefined","normalizeStdio","stdio","map","Error","join","Array","isArray","TypeError","length","Math","max","from","value","index","module","exports","node","includes"],"sources":["C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/execa/lib/stdio.js"],"sourcesContent":["'use strict';\nconst aliases = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = options => aliases.some(alias => options[alias] !== undefined);\n\nconst normalizeStdio = options => {\n\tif (!options) {\n\t\treturn;\n\t}\n\n\tconst {stdio} = options;\n\n\tif (stdio === undefined) {\n\t\treturn aliases.map(alias => options[alias]);\n\t}\n\n\tif (hasAlias(options)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${aliases.map(alias => `\\`${alias}\\``).join(', ')}`);\n\t}\n\n\tif (typeof stdio === 'string') {\n\t\treturn stdio;\n\t}\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst length = Math.max(stdio.length, aliases.length);\n\treturn Array.from({length}, (value, index) => stdio[index]);\n};\n\nmodule.exports = normalizeStdio;\n\n// `ipc` is pushed unless it is already present\nmodule.exports.node = options => {\n\tconst stdio = normalizeStdio(options);\n\n\tif (stdio === 'ipc') {\n\t\treturn 'ipc';\n\t}\n\n\tif (stdio === undefined || typeof stdio === 'string') {\n\t\treturn [stdio, stdio, stdio, 'ipc'];\n\t}\n\n\tif (stdio.includes('ipc')) {\n\t\treturn stdio;\n\t}\n\n\treturn [...stdio, 'ipc'];\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,OAAO,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAE7C,MAAMC,QAAQ,GAAGC,OAAO,IAAIF,OAAO,CAACG,IAAI,CAACC,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,KAAKC,SAAS,CAAC;AAE/E,MAAMC,cAAc,GAAGJ,OAAO,IAAI;EACjC,IAAI,CAACA,OAAO,EAAE;IACb;EACD;EAEA,MAAM;IAACK;EAAK,CAAC,GAAGL,OAAO;EAEvB,IAAIK,KAAK,KAAKF,SAAS,EAAE;IACxB,OAAOL,OAAO,CAACQ,GAAG,CAACJ,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,CAAC;EAC5C;EAEA,IAAIH,QAAQ,CAACC,OAAO,CAAC,EAAE;IACtB,MAAM,IAAIO,KAAK,CAAE,qEAAoET,OAAO,CAACQ,GAAG,CAACJ,KAAK,IAAK,KAAIA,KAAM,IAAG,CAAC,CAACM,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC;EACxI;EAEA,IAAI,OAAOH,KAAK,KAAK,QAAQ,EAAE;IAC9B,OAAOA,KAAK;EACb;EAEA,IAAI,CAACI,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;IAC1B,MAAM,IAAIM,SAAS,CAAE,mEAAkE,OAAON,KAAM,IAAG,CAAC;EACzG;EAEA,MAAMO,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACT,KAAK,CAACO,MAAM,EAAEd,OAAO,CAACc,MAAM,CAAC;EACrD,OAAOH,KAAK,CAACM,IAAI,CAAC;IAACH;EAAM,CAAC,EAAE,CAACI,KAAK,EAAEC,KAAK,KAAKZ,KAAK,CAACY,KAAK,CAAC,CAAC;AAC5D,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGf,cAAc;;AAE/B;AACAc,MAAM,CAACC,OAAO,CAACC,IAAI,GAAGpB,OAAO,IAAI;EAChC,MAAMK,KAAK,GAAGD,cAAc,CAACJ,OAAO,CAAC;EAErC,IAAIK,KAAK,KAAK,KAAK,EAAE;IACpB,OAAO,KAAK;EACb;EAEA,IAAIA,KAAK,KAAKF,SAAS,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAAE;IACrD,OAAO,CAACA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAE,KAAK,CAAC;EACpC;EAEA,IAAIA,KAAK,CAACgB,QAAQ,CAAC,KAAK,CAAC,EAAE;IAC1B,OAAOhB,KAAK;EACb;EAEA,OAAO,CAAC,GAAGA,KAAK,EAAE,KAAK,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}