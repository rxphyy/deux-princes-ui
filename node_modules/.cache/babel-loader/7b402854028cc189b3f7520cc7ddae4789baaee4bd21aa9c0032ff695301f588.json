{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _objectSpread = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunCommandCursor = void 0;\nvar error_1 = require(\"../error\");\nvar execute_operation_1 = require(\"../operations/execute_operation\");\nvar get_more_1 = require(\"../operations/get_more\");\nvar run_command_1 = require(\"../operations/run_command\");\nvar utils_1 = require(\"../utils\");\nvar abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @public */\nvar RunCommandCursor = /*#__PURE__*/function (_abstract_cursor_1$Ab) {\n  _inherits(RunCommandCursor, _abstract_cursor_1$Ab);\n  var _super = _createSuper(RunCommandCursor);\n  /** @internal */\n  function RunCommandCursor(db, command) {\n    var _this;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, RunCommandCursor);\n    _this = _super.call(this, db.client, (0, utils_1.ns)(db.namespace), options);\n    _this.getMoreOptions = {};\n    _this.db = db;\n    _this.command = Object.freeze(_objectSpread({}, command));\n    return _this;\n  }\n  /** @internal */\n  _createClass(RunCommandCursor, [{\n    key: \"setComment\",\n    value:\n    /**\n     * Controls the `getMore.comment` field\n     * @param comment - any BSON value\n     */\n    function setComment(comment) {\n      this.getMoreOptions.comment = comment;\n      return this;\n    }\n    /**\n     * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\n     * @param maxTimeMS - the number of milliseconds to wait for new data\n     */\n  }, {\n    key: \"setMaxTimeMS\",\n    value: function setMaxTimeMS(maxTimeMS) {\n      this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\n      return this;\n    }\n    /**\n     * Controls the `getMore.batchSize` field\n     * @param maxTimeMS - the number documents to return in the `nextBatch`\n     */\n  }, {\n    key: \"setBatchSize\",\n    value: function setBatchSize(batchSize) {\n      this.getMoreOptions.batchSize = batchSize;\n      return this;\n    }\n    /** Unsupported for RunCommandCursor */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      throw new error_1.MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\n    }\n    /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\n  }, {\n    key: \"withReadConcern\",\n    value: function withReadConcern(_) {\n      throw new error_1.MongoAPIError('RunCommandCursor does not support readConcern it must be attached to the command being run');\n    }\n    /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\n  }, {\n    key: \"addCursorFlag\",\n    value: function addCursorFlag(_, __) {\n      throw new error_1.MongoAPIError('RunCommandCursor does not support cursor flags, they must be attached to the command being run');\n    }\n    /** Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document */\n  }, {\n    key: \"maxTimeMS\",\n    value: function maxTimeMS(_) {\n      throw new error_1.MongoAPIError('maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()');\n    }\n    /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\n  }, {\n    key: \"batchSize\",\n    value: function batchSize(_) {\n      throw new error_1.MongoAPIError('batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()');\n    }\n  }, {\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(session) {\n        var operation, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              operation = new run_command_1.RunCommandOperation(this.db, this.command, _objectSpread(_objectSpread({}, this.cursorOptions), {}, {\n                session: session,\n                readPreference: this.cursorOptions.readPreference\n              }));\n              _context.next = 3;\n              return (0, execute_operation_1.executeOperation)(this.client, operation);\n            case 3:\n              response = _context.sent;\n              if (!(response.cursor == null)) {\n                _context.next = 6;\n                break;\n              }\n              throw new error_1.MongoUnexpectedServerResponseError('Expected server to respond with cursor');\n            case 6:\n              return _context.abrupt(\"return\", {\n                server: operation.server,\n                session: session,\n                response: response\n              });\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _initialize(_x) {\n        return _initialize2.apply(this, arguments);\n      }\n      return _initialize;\n    }() /** @internal */\n  }, {\n    key: \"getMore\",\n    value: function () {\n      var _getMore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_batchSize) {\n        var getMoreOperation;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              getMoreOperation = new get_more_1.GetMoreOperation(this.namespace, this.id, this.server, _objectSpread(_objectSpread({}, this.cursorOptions), {}, {\n                session: this.session\n              }, this.getMoreOptions));\n              return _context2.abrupt(\"return\", (0, execute_operation_1.executeOperation)(this.client, getMoreOperation));\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getMore(_x2) {\n        return _getMore.apply(this, arguments);\n      }\n      return getMore;\n    }()\n  }]);\n  return RunCommandCursor;\n}(abstract_cursor_1.AbstractCursor);\nexports.RunCommandCursor = RunCommandCursor;","map":{"version":3,"names":["error_1","require","execute_operation_1","get_more_1","run_command_1","utils_1","abstract_cursor_1","RunCommandCursor","_abstract_cursor_1$Ab","_inherits","_super","_createSuper","db","command","_this","options","arguments","length","undefined","_classCallCheck","call","client","ns","namespace","getMoreOptions","Object","freeze","_objectSpread","_createClass","key","value","setComment","comment","setMaxTimeMS","maxTimeMS","maxAwaitTimeMS","setBatchSize","batchSize","clone","MongoAPIError","withReadConcern","_","addCursorFlag","__","_initialize2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","session","operation","response","wrap","_callee$","_context","prev","next","RunCommandOperation","cursorOptions","readPreference","executeOperation","sent","cursor","MongoUnexpectedServerResponseError","abrupt","server","stop","_initialize","_x","apply","_getMore","_callee2","_batchSize","getMoreOperation","_callee2$","_context2","GetMoreOperation","id","getMore","_x2","AbstractCursor","exports"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\cursor\\run_command_cursor.ts"],"sourcesContent":["import type { BSONSerializeOptions, Document, Long } from '../bson';\nimport type { Db } from '../db';\nimport { MongoAPIError, MongoUnexpectedServerResponseError } from '../error';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport { GetMoreOperation } from '../operations/get_more';\nimport { RunCommandOperation } from '../operations/run_command';\nimport type { ReadConcernLike } from '../read_concern';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { ns } from '../utils';\nimport { AbstractCursor } from './abstract_cursor';\n\n/** @public */\nexport type RunCursorCommandOptions = {\n  readPreference?: ReadPreferenceLike;\n  session?: ClientSession;\n} & BSONSerializeOptions;\n\n/** @internal */\ntype RunCursorCommandResponse = {\n  cursor: { id: bigint | Long | number; ns: string; firstBatch: Document[] };\n  ok: 1;\n};\n\n/** @public */\nexport class RunCommandCursor extends AbstractCursor {\n  public readonly command: Readonly<Record<string, any>>;\n  public readonly getMoreOptions: {\n    comment?: any;\n    maxAwaitTimeMS?: number;\n    batchSize?: number;\n  } = {};\n\n  /**\n   * Controls the `getMore.comment` field\n   * @param comment - any BSON value\n   */\n  public setComment(comment: any): this {\n    this.getMoreOptions.comment = comment;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\n   * @param maxTimeMS - the number of milliseconds to wait for new data\n   */\n  public setMaxTimeMS(maxTimeMS: number): this {\n    this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.batchSize` field\n   * @param maxTimeMS - the number documents to return in the `nextBatch`\n   */\n  public setBatchSize(batchSize: number): this {\n    this.getMoreOptions.batchSize = batchSize;\n    return this;\n  }\n\n  /** Unsupported for RunCommandCursor */\n  public override clone(): never {\n    throw new MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\n  }\n\n  /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\n  public override withReadConcern(_: ReadConcernLike): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support readConcern it must be attached to the command being run'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\n  public override addCursorFlag(_: string, __: boolean): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support cursor flags, they must be attached to the command being run'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document */\n  public override maxTimeMS(_: number): never {\n    throw new MongoAPIError(\n      'maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\n  public override batchSize(_: number): never {\n    throw new MongoAPIError(\n      'batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()'\n    );\n  }\n\n  /** @internal */\n  private db: Db;\n\n  /** @internal */\n  constructor(db: Db, command: Document, options: RunCursorCommandOptions = {}) {\n    super(db.client, ns(db.namespace), options);\n    this.db = db;\n    this.command = Object.freeze({ ...command });\n  }\n\n  /** @internal */\n  protected async _initialize(session: ClientSession): Promise<ExecutionResult> {\n    const operation = new RunCommandOperation<RunCursorCommandResponse>(this.db, this.command, {\n      ...this.cursorOptions,\n      session: session,\n      readPreference: this.cursorOptions.readPreference\n    });\n    const response = await executeOperation(this.client, operation);\n    if (response.cursor == null) {\n      throw new MongoUnexpectedServerResponseError('Expected server to respond with cursor');\n    }\n    return {\n      server: operation.server,\n      session,\n      response\n    };\n  }\n\n  /** @internal */\n  override async getMore(_batchSize: number): Promise<Document> {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getMoreOperation = new GetMoreOperation(this.namespace, this.id!, this.server!, {\n      ...this.cursorOptions,\n      session: this.session,\n      ...this.getMoreOptions\n    });\n\n    return executeOperation(this.client, getMoreOperation);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}