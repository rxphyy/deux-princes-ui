{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _get = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _toArray = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/toArray.js\").default;\nvar _classCallCheck = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _objectSpread = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.request = exports.matchesParentDomain = exports.parseUnsignedInteger = exports.parseInteger = exports.compareObjectId = exports.commandSupportsReadConcern = exports.shuffle = exports.supportsRetryableWrites = exports.enumToString = exports.emitWarningOnce = exports.emitWarning = exports.MONGODB_WARNING_CODE = exports.DEFAULT_PK_FACTORY = exports.HostAddress = exports.BufferPool = exports.List = exports.deepCopy = exports.isRecord = exports.setDifference = exports.isHello = exports.isSuperset = exports.resolveOptions = exports.hasAtomicOperators = exports.calculateDurationInMs = exports.now = exports.makeStateMachine = exports.errorStrictEqual = exports.arrayStrictEqual = exports.eachAsync = exports.maxWireVersion = exports.uuidV4 = exports.databaseNamespace = exports.maybeCallback = exports.makeCounter = exports.MongoDBCollectionNamespace = exports.MongoDBNamespace = exports.ns = exports.getTopology = exports.decorateWithExplain = exports.decorateWithReadConcern = exports.decorateWithCollation = exports.isPromiseLike = exports.applyRetryableWrites = exports.filterOptions = exports.mergeOptions = exports.isObject = exports.normalizeHintField = exports.checkCollectionName = exports.hostMatchesWildcards = exports.ByteUtils = void 0;\nvar crypto = require(\"crypto\");\nvar http = require(\"http\");\nvar url = require(\"url\");\nvar url_1 = require(\"url\");\nvar bson_1 = require(\"./bson\");\nvar constants_1 = require(\"./cmap/wire_protocol/constants\");\nvar constants_2 = require(\"./constants\");\nvar error_1 = require(\"./error\");\nvar read_concern_1 = require(\"./read_concern\");\nvar read_preference_1 = require(\"./read_preference\");\nvar common_1 = require(\"./sdam/common\");\nvar write_concern_1 = require(\"./write_concern\");\nexports.ByteUtils = {\n  toLocalBufferType: function toLocalBufferType(buffer) {\n    return Buffer.isBuffer(buffer) ? buffer : Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  },\n  equals: function equals(seqA, seqB) {\n    return exports.ByteUtils.toLocalBufferType(seqA).equals(seqB);\n  },\n  compare: function compare(seqA, seqB) {\n    return exports.ByteUtils.toLocalBufferType(seqA).compare(seqB);\n  },\n  toBase64: function toBase64(uint8array) {\n    return exports.ByteUtils.toLocalBufferType(uint8array).toString('base64');\n  }\n};\n/**\n * Determines if a connection's address matches a user provided list\n * of domain wildcards.\n */\nfunction hostMatchesWildcards(host, wildcards) {\n  var _iterator = _createForOfIteratorHelper(wildcards),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var wildcard = _step.value;\n      if (host === wildcard || wildcard.startsWith('*.') && host !== null && host !== void 0 && host.endsWith(wildcard.substring(2, wildcard.length)) || wildcard.startsWith('*/') && host !== null && host !== void 0 && host.endsWith(wildcard.substring(2, wildcard.length))) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return false;\n}\nexports.hostMatchesWildcards = hostMatchesWildcards;\n/**\n * Throws if collectionName is not a valid mongodb collection namespace.\n * @internal\n */\nfunction checkCollectionName(collectionName) {\n  if ('string' !== typeof collectionName) {\n    throw new error_1.MongoInvalidArgumentError('Collection name must be a String');\n  }\n  if (!collectionName || collectionName.indexOf('..') !== -1) {\n    throw new error_1.MongoInvalidArgumentError('Collection names cannot be empty');\n  }\n  if (collectionName.indexOf('$') !== -1 && collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new error_1.MongoInvalidArgumentError(\"Collection names must not contain '$'\");\n  }\n  if (collectionName.match(/^\\.|\\.$/) != null) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new error_1.MongoInvalidArgumentError(\"Collection names must not start or end with '.'\");\n  }\n  // Validate that we are not passing 0x00 in the collection name\n  if (collectionName.indexOf('\\x00') !== -1) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new error_1.MongoInvalidArgumentError('Collection names cannot contain a null character');\n  }\n}\nexports.checkCollectionName = checkCollectionName;\n/**\n * Ensure Hint field is in a shape we expect:\n * - object of index names mapping to 1 or -1\n * - just an index name\n * @internal\n */\nfunction normalizeHintField(hint) {\n  var finalHint = undefined;\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n    hint.forEach(function (param) {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {};\n    for (var name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n  return finalHint;\n}\nexports.normalizeHintField = normalizeHintField;\nvar TO_STRING = function TO_STRING(object) {\n  return Object.prototype.toString.call(object);\n};\n/**\n * Checks if arg is an Object:\n * - **NOTE**: the check is based on the `[Symbol.toStringTag]() === 'Object'`\n * @internal\n */\nfunction isObject(arg) {\n  return '[object Object]' === TO_STRING(arg);\n}\nexports.isObject = isObject;\n/** @internal */\nfunction mergeOptions(target, source) {\n  return _objectSpread(_objectSpread({}, target), source);\n}\nexports.mergeOptions = mergeOptions;\n/** @internal */\nfunction filterOptions(options, names) {\n  var filterOptions = {};\n  for (var name in options) {\n    if (names.includes(name)) {\n      filterOptions[name] = options[name];\n    }\n  }\n  // Filtered options\n  return filterOptions;\n}\nexports.filterOptions = filterOptions;\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n * @internal\n *\n * @param target - The target command to which we will apply retryWrites.\n * @param db - The database from which we can inherit a retryWrites value.\n */\nfunction applyRetryableWrites(target, db) {\n  var _db$s$options;\n  if (db && (_db$s$options = db.s.options) !== null && _db$s$options !== void 0 && _db$s$options.retryWrites) {\n    target.retryWrites = true;\n  }\n  return target;\n}\nexports.applyRetryableWrites = applyRetryableWrites;\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n * @internal\n *\n * @param target - the target command we will be applying the write concern to\n * @param sources - sources where we can inherit default write concerns from\n * @param options - optional settings passed into a command for write concern overrides\n */\n/**\n * Checks if a given value is a Promise\n *\n * @typeParam T - The resolution type of the possible promise\n * @param value - An object that could be a promise\n * @returns true if the provided value is a Promise\n */\nfunction isPromiseLike(value) {\n  return !!value && typeof value.then === 'function';\n}\nexports.isPromiseLike = isPromiseLike;\n/**\n * Applies collation to a given command.\n * @internal\n *\n * @param command - the command on which to apply collation\n * @param target - target of command\n * @param options - options containing collation settings\n */\nfunction decorateWithCollation(command, target, options) {\n  var capabilities = getTopology(target).capabilities;\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new error_1.MongoCompatibilityError(\"Current topology does not support collation\");\n    }\n  }\n}\nexports.decorateWithCollation = decorateWithCollation;\n/**\n * Applies a read concern to a given command.\n * @internal\n *\n * @param command - the command on which to apply the read concern\n * @param coll - the parent collection of the operation calling this method\n */\nfunction decorateWithReadConcern(command, coll, options) {\n  if (options && options.session && options.session.inTransaction()) {\n    return;\n  }\n  var readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, {\n      readConcern: readConcern\n    });\n  }\n}\nexports.decorateWithReadConcern = decorateWithReadConcern;\n/**\n * Applies an explain to a given command.\n * @internal\n *\n * @param command - the command on which to apply the explain\n * @param options - the options containing the explain verbosity\n */\nfunction decorateWithExplain(command, explain) {\n  if (command.explain) {\n    return command;\n  }\n  return {\n    explain: command,\n    verbosity: explain.verbosity\n  };\n}\nexports.decorateWithExplain = decorateWithExplain;\n/**\n * A helper function to get the topology from a given provider. Throws\n * if the topology cannot be found.\n * @throws MongoNotConnectedError\n * @internal\n */\nfunction getTopology(provider) {\n  // MongoClient or ClientSession or AbstractCursor\n  if ('topology' in provider && provider.topology) {\n    return provider.topology;\n  } else if ('client' in provider && provider.client.topology) {\n    return provider.client.topology;\n  }\n  throw new error_1.MongoNotConnectedError('MongoClient must be connected to perform this operation');\n}\nexports.getTopology = getTopology;\n/** @internal */\nfunction ns(ns) {\n  return MongoDBNamespace.fromString(ns);\n}\nexports.ns = ns;\n/** @public */\nvar MongoDBNamespace = /*#__PURE__*/function () {\n  /**\n   * Create a namespace object\n   *\n   * @param db - database name\n   * @param collection - collection name\n   */\n  function MongoDBNamespace(db, collection) {\n    _classCallCheck(this, MongoDBNamespace);\n    this.db = db;\n    this.collection = collection;\n    this.collection = collection === '' ? undefined : collection;\n  }\n  _createClass(MongoDBNamespace, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.collection ? \"\".concat(this.db, \".\").concat(this.collection) : this.db;\n    }\n  }, {\n    key: \"withCollection\",\n    value: function withCollection(collection) {\n      return new MongoDBCollectionNamespace(this.db, collection);\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(namespace) {\n      if (typeof namespace !== 'string' || namespace === '') {\n        // TODO(NODE-3483): Replace with MongoNamespaceError\n        throw new error_1.MongoRuntimeError(\"Cannot parse namespace from \\\"\".concat(namespace, \"\\\"\"));\n      }\n      var _namespace$split = namespace.split('.'),\n        _namespace$split2 = _toArray(_namespace$split),\n        db = _namespace$split2[0],\n        collectionParts = _namespace$split2.slice(1);\n      var collection = collectionParts.join('.');\n      return new MongoDBNamespace(db, collection === '' ? undefined : collection);\n    }\n  }]);\n  return MongoDBNamespace;\n}();\nexports.MongoDBNamespace = MongoDBNamespace;\n/**\n * @public\n *\n * A class representing a collection's namespace.  This class enforces (through Typescript) that\n * the `collection` portion of the namespace is defined and should only be\n * used in scenarios where this can be guaranteed.\n */\nvar MongoDBCollectionNamespace = /*#__PURE__*/function (_MongoDBNamespace) {\n  _inherits(MongoDBCollectionNamespace, _MongoDBNamespace);\n  var _super = _createSuper(MongoDBCollectionNamespace);\n  function MongoDBCollectionNamespace(db, collection) {\n    var _this;\n    _classCallCheck(this, MongoDBCollectionNamespace);\n    _this = _super.call(this, db, collection);\n    _this.collection = collection;\n    return _this;\n  }\n  _createClass(MongoDBCollectionNamespace, null, [{\n    key: \"fromString\",\n    value: function fromString(namespace) {\n      return _get(_getPrototypeOf(MongoDBCollectionNamespace), \"fromString\", this).call(this, namespace);\n    }\n  }]);\n  return MongoDBCollectionNamespace;\n}(MongoDBNamespace);\nexports.MongoDBCollectionNamespace = MongoDBCollectionNamespace;\n/** @internal */\nfunction makeCounter() {\n  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var count, newCount;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          count = seed;\n        case 1:\n          if (!true) {\n            _context.next = 8;\n            break;\n          }\n          newCount = count;\n          count += 1;\n          _context.next = 6;\n          return newCount;\n        case 6:\n          _context.next = 1;\n          break;\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })();\n}\nexports.makeCounter = makeCounter;\nfunction maybeCallback(promiseFn, callback) {\n  var promise = promiseFn();\n  if (callback == null) {\n    return promise;\n  }\n  promise.then(function (result) {\n    return callback(undefined, result);\n  }, function (error) {\n    return callback(error);\n  });\n  return;\n}\nexports.maybeCallback = maybeCallback;\n/** @internal */\nfunction databaseNamespace(ns) {\n  return ns.split('.')[0];\n}\nexports.databaseNamespace = databaseNamespace;\n/**\n * Synchronously Generate a UUIDv4\n * @internal\n */\nfunction uuidV4() {\n  var result = crypto.randomBytes(16);\n  result[6] = result[6] & 0x0f | 0x40;\n  result[8] = result[8] & 0x3f | 0x80;\n  return result;\n}\nexports.uuidV4 = uuidV4;\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology instances\n * @internal\n */\nfunction maxWireVersion(topologyOrServer) {\n  if (topologyOrServer) {\n    if (topologyOrServer.loadBalanced) {\n      // Since we do not have a monitor, we assume the load balanced server is always\n      // pointed at the latest mongodb version. There is a risk that for on-prem\n      // deployments that don't upgrade immediately that this could alert to the\n      // application that a feature is available that is actually not.\n      return constants_1.MAX_SUPPORTED_WIRE_VERSION;\n    }\n    if (topologyOrServer.hello) {\n      return topologyOrServer.hello.maxWireVersion;\n    }\n    if ('lastHello' in topologyOrServer && typeof topologyOrServer.lastHello === 'function') {\n      var lastHello = topologyOrServer.lastHello();\n      if (lastHello) {\n        return lastHello.maxWireVersion;\n      }\n    }\n    if (topologyOrServer.description && 'maxWireVersion' in topologyOrServer.description && topologyOrServer.description.maxWireVersion != null) {\n      return topologyOrServer.description.maxWireVersion;\n    }\n  }\n  return 0;\n}\nexports.maxWireVersion = maxWireVersion;\n/**\n * Applies the function `eachFn` to each item in `arr`, in parallel.\n * @internal\n *\n * @param arr - An array of items to asynchronously iterate over\n * @param eachFn - A function to call on each item of the array. The callback signature is `(item, callback)`, where the callback indicates iteration is complete.\n * @param callback - The callback called after every item has been iterated\n */\nfunction eachAsync(arr, eachFn, callback) {\n  arr = arr || [];\n  var idx = 0;\n  var awaiting = 0;\n  for (idx = 0; idx < arr.length; ++idx) {\n    awaiting++;\n    eachFn(arr[idx], eachCallback);\n  }\n  if (awaiting === 0) {\n    callback();\n    return;\n  }\n  function eachCallback(err) {\n    awaiting--;\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (idx === arr.length && awaiting <= 0) {\n      callback();\n    }\n  }\n}\nexports.eachAsync = eachAsync;\n/** @internal */\nfunction arrayStrictEqual(arr, arr2) {\n  if (!Array.isArray(arr) || !Array.isArray(arr2)) {\n    return false;\n  }\n  return arr.length === arr2.length && arr.every(function (elt, idx) {\n    return elt === arr2[idx];\n  });\n}\nexports.arrayStrictEqual = arrayStrictEqual;\n/** @internal */\nfunction errorStrictEqual(lhs, rhs) {\n  if (lhs === rhs) {\n    return true;\n  }\n  if (!lhs || !rhs) {\n    return lhs === rhs;\n  }\n  if (lhs == null && rhs != null || lhs != null && rhs == null) {\n    return false;\n  }\n  if (lhs.constructor.name !== rhs.constructor.name) {\n    return false;\n  }\n  if (lhs.message !== rhs.message) {\n    return false;\n  }\n  return true;\n}\nexports.errorStrictEqual = errorStrictEqual;\n/** @internal */\nfunction makeStateMachine(stateTable) {\n  return function stateTransition(target, newState) {\n    var legalStates = stateTable[target.s.state];\n    if (legalStates && legalStates.indexOf(newState) < 0) {\n      throw new error_1.MongoRuntimeError(\"illegal state transition from [\".concat(target.s.state, \"] => [\").concat(newState, \"], allowed: [\").concat(legalStates, \"]\"));\n    }\n    target.emit('stateChanged', target.s.state, newState);\n    target.s.state = newState;\n  };\n}\nexports.makeStateMachine = makeStateMachine;\n/** @internal */\nfunction now() {\n  var hrtime = process.hrtime();\n  return Math.floor(hrtime[0] * 1000 + hrtime[1] / 1000000);\n}\nexports.now = now;\n/** @internal */\nfunction calculateDurationInMs(started) {\n  if (typeof started !== 'number') {\n    throw new error_1.MongoInvalidArgumentError('Numeric value required to calculate duration');\n  }\n  var elapsed = now() - started;\n  return elapsed < 0 ? 0 : elapsed;\n}\nexports.calculateDurationInMs = calculateDurationInMs;\n/** @internal */\nfunction hasAtomicOperators(doc) {\n  if (Array.isArray(doc)) {\n    var _iterator2 = _createForOfIteratorHelper(doc),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var document = _step2.value;\n        if (hasAtomicOperators(document)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return false;\n  }\n  var keys = Object.keys(doc);\n  return keys.length > 0 && keys[0][0] === '$';\n}\nexports.hasAtomicOperators = hasAtomicOperators;\n/**\n * Merge inherited properties from parent into options, prioritizing values from options,\n * then values from parent.\n * @internal\n */\nfunction resolveOptions(parent, options) {\n  var _read_preference_1$Re;\n  var result = Object.assign({}, options, (0, bson_1.resolveBSONOptions)(options, parent));\n  // Users cannot pass a readConcern/writeConcern to operations in a transaction\n  var session = options === null || options === void 0 ? void 0 : options.session;\n  if (!(session !== null && session !== void 0 && session.inTransaction())) {\n    var _read_concern_1$ReadC, _write_concern_1$Writ;\n    var readConcern = (_read_concern_1$ReadC = read_concern_1.ReadConcern.fromOptions(options)) !== null && _read_concern_1$ReadC !== void 0 ? _read_concern_1$ReadC : parent === null || parent === void 0 ? void 0 : parent.readConcern;\n    if (readConcern) {\n      result.readConcern = readConcern;\n    }\n    var writeConcern = (_write_concern_1$Writ = write_concern_1.WriteConcern.fromOptions(options)) !== null && _write_concern_1$Writ !== void 0 ? _write_concern_1$Writ : parent === null || parent === void 0 ? void 0 : parent.writeConcern;\n    if (writeConcern) {\n      result.writeConcern = writeConcern;\n    }\n  }\n  var readPreference = (_read_preference_1$Re = read_preference_1.ReadPreference.fromOptions(options)) !== null && _read_preference_1$Re !== void 0 ? _read_preference_1$Re : parent === null || parent === void 0 ? void 0 : parent.readPreference;\n  if (readPreference) {\n    result.readPreference = readPreference;\n  }\n  return result;\n}\nexports.resolveOptions = resolveOptions;\nfunction isSuperset(set, subset) {\n  set = Array.isArray(set) ? new Set(set) : set;\n  subset = Array.isArray(subset) ? new Set(subset) : subset;\n  var _iterator3 = _createForOfIteratorHelper(subset),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var elem = _step3.value;\n      if (!set.has(elem)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return true;\n}\nexports.isSuperset = isSuperset;\n/**\n * Checks if the document is a Hello request\n * @internal\n */\nfunction isHello(doc) {\n  return doc[constants_2.LEGACY_HELLO_COMMAND] || doc.hello ? true : false;\n}\nexports.isHello = isHello;\n/** Returns the items that are uniquely in setA */\nfunction setDifference(setA, setB) {\n  var difference = new Set(setA);\n  var _iterator4 = _createForOfIteratorHelper(setB),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var elem = _step4.value;\n      difference.delete(elem);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return difference;\n}\nexports.setDifference = setDifference;\nvar HAS_OWN = function HAS_OWN(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n};\nfunction isRecord(value) {\n  var requiredKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  if (!isObject(value)) {\n    return false;\n  }\n  var ctor = value.constructor;\n  if (ctor && ctor.prototype) {\n    if (!isObject(ctor.prototype)) {\n      return false;\n    }\n    // Check to see if some method exists from the Object exists\n    if (!HAS_OWN(ctor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  }\n  if (requiredKeys) {\n    var keys = Object.keys(value);\n    return isSuperset(keys, requiredKeys);\n  }\n  return true;\n}\nexports.isRecord = isRecord;\n/**\n * Make a deep copy of an object\n *\n * NOTE: This is not meant to be the perfect implementation of a deep copy,\n * but instead something that is good enough for the purposes of\n * command monitoring.\n */\nfunction deepCopy(value) {\n  if (value == null) {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value.map(function (item) {\n      return deepCopy(item);\n    });\n  } else if (isRecord(value)) {\n    var res = {};\n    for (var key in value) {\n      res[key] = deepCopy(value[key]);\n    }\n    return res;\n  }\n  var ctor = value.constructor;\n  if (ctor) {\n    switch (ctor.name.toLowerCase()) {\n      case 'date':\n        return new ctor(Number(value));\n      case 'map':\n        return new Map(value);\n      case 'set':\n        return new Set(value);\n      case 'buffer':\n        return Buffer.from(value);\n    }\n  }\n  return value;\n}\nexports.deepCopy = deepCopy;\n/**\n * A sequential list of items in a circularly linked list\n * @remarks\n * The head node is special, it is always defined and has a value of null.\n * It is never \"included\" in the list, in that, it is not returned by pop/shift or yielded by the iterator.\n * The circular linkage and always defined head node are to reduce checks for null next/prev references to zero.\n * New nodes are declared as object literals with keys always in the same order: next, prev, value.\n * @internal\n */\nvar List = /*#__PURE__*/function (_Symbol$toStringTag, _Symbol$iterator) {\n  function List() {\n    _classCallCheck(this, List);\n    this.count = 0;\n    // this is carefully crafted:\n    // declaring a complete and consistently key ordered\n    // object is beneficial to the runtime optimizations\n    this.head = {\n      next: null,\n      prev: null,\n      value: null\n    };\n    this.head.next = this.head;\n    this.head.prev = this.head;\n  }\n  _createClass(List, [{\n    key: \"length\",\n    get: function get() {\n      return this.count;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'List';\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return Array.from(this);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"head <=> \".concat(this.toArray().join(' <=> '), \" <=> head\");\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      var _iterator5, _step5, node;\n      return _regeneratorRuntime().wrap(function value$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _iterator5 = _createForOfIteratorHelper(this.nodes());\n            _context2.prev = 1;\n            _iterator5.s();\n          case 3:\n            if ((_step5 = _iterator5.n()).done) {\n              _context2.next = 9;\n              break;\n            }\n            node = _step5.value;\n            _context2.next = 7;\n            return node.value;\n          case 7:\n            _context2.next = 3;\n            break;\n          case 9:\n            _context2.next = 14;\n            break;\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            _iterator5.e(_context2.t0);\n          case 14:\n            _context2.prev = 14;\n            _iterator5.f();\n            return _context2.finish(14);\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, value, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"nodes\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function nodes() {\n      var ptr, _ptr, next;\n      return _regeneratorRuntime().wrap(function nodes$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            ptr = this.head.next;\n          case 1:\n            if (!(ptr !== this.head)) {\n              _context3.next = 8;\n              break;\n            }\n            // Save next before yielding so that we make removing within iteration safe\n            _ptr = ptr, next = _ptr.next;\n            _context3.next = 5;\n            return ptr;\n          case 5:\n            ptr = next;\n            _context3.next = 1;\n            break;\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, nodes, this);\n    }) /** Insert at end of list */\n  }, {\n    key: \"push\",\n    value: function push(value) {\n      this.count += 1;\n      var newNode = {\n        next: this.head,\n        prev: this.head.prev,\n        value: value\n      };\n      this.head.prev.next = newNode;\n      this.head.prev = newNode;\n    }\n    /** Inserts every item inside an iterable instead of the iterable itself */\n  }, {\n    key: \"pushMany\",\n    value: function pushMany(iterable) {\n      var _iterator6 = _createForOfIteratorHelper(iterable),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _value = _step6.value;\n          this.push(_value);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n    /** Insert at front of list */\n  }, {\n    key: \"unshift\",\n    value: function unshift(value) {\n      this.count += 1;\n      var newNode = {\n        next: this.head.next,\n        prev: this.head,\n        value: value\n      };\n      this.head.next.prev = newNode;\n      this.head.next = newNode;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node === this.head || this.length === 0) {\n        return null;\n      }\n      this.count -= 1;\n      var prevNode = node.prev;\n      var nextNode = node.next;\n      prevNode.next = nextNode;\n      nextNode.prev = prevNode;\n      return node.value;\n    }\n    /** Removes the first node at the front of the list */\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return this.remove(this.head.next);\n    }\n    /** Removes the last node at the end of the list */\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return this.remove(this.head.prev);\n    }\n    /** Iterates through the list and removes nodes where filter returns true */\n  }, {\n    key: \"prune\",\n    value: function prune(filter) {\n      var _iterator7 = _createForOfIteratorHelper(this.nodes()),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var node = _step7.value;\n          if (filter(node.value)) {\n            this.remove(node);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.count = 0;\n      this.head.next = this.head;\n      this.head.prev = this.head;\n    }\n    /** Returns the first item in the list, does not remove */\n  }, {\n    key: \"first\",\n    value: function first() {\n      // If the list is empty, value will be the head's null\n      return this.head.next.value;\n    }\n    /** Returns the last item in the list, does not remove */\n  }, {\n    key: \"last\",\n    value: function last() {\n      // If the list is empty, value will be the head's null\n      return this.head.prev.value;\n    }\n  }]);\n  return List;\n}(Symbol.toStringTag, Symbol.iterator);\nexports.List = List;\n/**\n * A pool of Buffers which allow you to read them as if they were one\n * @internal\n */\nvar BufferPool = /*#__PURE__*/function () {\n  function BufferPool() {\n    _classCallCheck(this, BufferPool);\n    this.buffers = new List();\n    this.totalByteLength = 0;\n  }\n  _createClass(BufferPool, [{\n    key: \"length\",\n    get: function get() {\n      return this.totalByteLength;\n    }\n    /** Adds a buffer to the internal buffer pool list */\n  }, {\n    key: \"append\",\n    value: function append(buffer) {\n      this.buffers.push(buffer);\n      this.totalByteLength += buffer.length;\n    }\n    /**\n     * If BufferPool contains 4 bytes or more construct an int32 from the leading bytes,\n     * otherwise return null. Size can be negative, caller should error check.\n     */\n  }, {\n    key: \"getInt32\",\n    value: function getInt32() {\n      if (this.totalByteLength < 4) {\n        return null;\n      }\n      var firstBuffer = this.buffers.first();\n      if (firstBuffer != null && firstBuffer.byteLength >= 4) {\n        return firstBuffer.readInt32LE(0);\n      }\n      // Unlikely case: an int32 is split across buffers.\n      // Use read and put the returned buffer back on top\n      var top4Bytes = this.read(4);\n      var value = top4Bytes.readInt32LE(0);\n      // Put it back.\n      this.totalByteLength += 4;\n      this.buffers.unshift(top4Bytes);\n      return value;\n    }\n    /** Reads the requested number of bytes, optionally consuming them */\n  }, {\n    key: \"read\",\n    value: function read(size) {\n      if (typeof size !== 'number' || size < 0) {\n        throw new error_1.MongoInvalidArgumentError('Argument \"size\" must be a non-negative number');\n      }\n      // oversized request returns empty buffer\n      if (size > this.totalByteLength) {\n        return Buffer.alloc(0);\n      }\n      // We know we have enough, we just don't know how it is spread across chunks\n      // TODO(NODE-4732): alloc API should change based on raw option\n      var result = Buffer.allocUnsafe(size);\n      for (var bytesRead = 0; bytesRead < size;) {\n        var buffer = this.buffers.shift();\n        if (buffer == null) {\n          break;\n        }\n        var bytesRemaining = size - bytesRead;\n        var bytesReadable = Math.min(bytesRemaining, buffer.byteLength);\n        var bytes = buffer.subarray(0, bytesReadable);\n        result.set(bytes, bytesRead);\n        bytesRead += bytesReadable;\n        this.totalByteLength -= bytesReadable;\n        if (bytesReadable < buffer.byteLength) {\n          this.buffers.unshift(buffer.subarray(bytesReadable));\n        }\n      }\n      return result;\n    }\n  }]);\n  return BufferPool;\n}();\nexports.BufferPool = BufferPool;\n/** @public */\nvar HostAddress = /*#__PURE__*/function (_Symbol$for) {\n  function HostAddress(hostString) {\n    _classCallCheck(this, HostAddress);\n    this.host = undefined;\n    this.port = undefined;\n    this.socketPath = undefined;\n    this.isIPv6 = false;\n    var escapedHost = hostString.split(' ').join('%20'); // escape spaces, for socket path hosts\n    if (escapedHost.endsWith('.sock')) {\n      // heuristically determine if we're working with a domain socket\n      this.socketPath = decodeURIComponent(escapedHost);\n      return;\n    }\n    var urlString = \"iLoveJS://\".concat(escapedHost);\n    var url;\n    try {\n      url = new url_1.URL(urlString);\n    } catch (urlError) {\n      var runtimeError = new error_1.MongoRuntimeError(\"Unable to parse \".concat(escapedHost, \" with URL\"));\n      runtimeError.cause = urlError;\n      throw runtimeError;\n    }\n    var hostname = url.hostname;\n    var port = url.port;\n    var normalized = decodeURIComponent(hostname).toLowerCase();\n    if (normalized.startsWith('[') && normalized.endsWith(']')) {\n      this.isIPv6 = true;\n      normalized = normalized.substring(1, hostname.length - 1);\n    }\n    this.host = normalized.toLowerCase();\n    if (typeof port === 'number') {\n      this.port = port;\n    } else if (typeof port === 'string' && port !== '') {\n      this.port = Number.parseInt(port, 10);\n    } else {\n      this.port = 27017;\n    }\n    if (this.port === 0) {\n      throw new error_1.MongoParseError('Invalid port (zero) with hostname');\n    }\n    Object.freeze(this);\n  }\n  _createClass(HostAddress, [{\n    key: _Symbol$for,\n    value: function value() {\n      return this.inspect();\n    }\n  }, {\n    key: \"inspect\",\n    value: function inspect() {\n      return \"new HostAddress('\".concat(this.toString(), \"')\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (typeof this.host === 'string') {\n        if (this.isIPv6) {\n          return \"[\".concat(this.host, \"]:\").concat(this.port);\n        }\n        return \"\".concat(this.host, \":\").concat(this.port);\n      }\n      return \"\".concat(this.socketPath);\n    }\n  }, {\n    key: \"toHostPort\",\n    value: function toHostPort() {\n      var _this$host, _this$port;\n      if (this.socketPath) {\n        return {\n          host: this.socketPath,\n          port: 0\n        };\n      }\n      var host = (_this$host = this.host) !== null && _this$host !== void 0 ? _this$host : '';\n      var port = (_this$port = this.port) !== null && _this$port !== void 0 ? _this$port : 0;\n      return {\n        host: host,\n        port: port\n      };\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(s) {\n      return new HostAddress(s);\n    }\n  }, {\n    key: \"fromHostPort\",\n    value: function fromHostPort(host, port) {\n      if (host.includes(':')) {\n        host = \"[\".concat(host, \"]\"); // IPv6 address\n      }\n\n      return HostAddress.fromString(\"\".concat(host, \":\").concat(port));\n    }\n  }, {\n    key: \"fromSrvRecord\",\n    value: function fromSrvRecord(_ref) {\n      var name = _ref.name,\n        port = _ref.port;\n      return HostAddress.fromHostPort(name, port);\n    }\n  }]);\n  return HostAddress;\n}(Symbol.for('nodejs.util.inspect.custom'));\nexports.HostAddress = HostAddress;\nexports.DEFAULT_PK_FACTORY = {\n  // We prefer not to rely on ObjectId having a createPk method\n  createPk: function createPk() {\n    return new bson_1.ObjectId();\n  }\n};\n/**\n * When the driver used emitWarning the code will be equal to this.\n * @public\n *\n * @example\n * ```ts\n * process.on('warning', (warning) => {\n *  if (warning.code === MONGODB_WARNING_CODE) console.error('Ah an important warning! :)')\n * })\n * ```\n */\nexports.MONGODB_WARNING_CODE = 'MONGODB DRIVER';\n/** @internal */\nfunction emitWarning(message) {\n  return process.emitWarning(message, {\n    code: exports.MONGODB_WARNING_CODE\n  });\n}\nexports.emitWarning = emitWarning;\nvar emittedWarnings = new Set();\n/**\n * Will emit a warning once for the duration of the application.\n * Uses the message to identify if it has already been emitted\n * so using string interpolation can cause multiple emits\n * @internal\n */\nfunction emitWarningOnce(message) {\n  if (!emittedWarnings.has(message)) {\n    emittedWarnings.add(message);\n    return emitWarning(message);\n  }\n}\nexports.emitWarningOnce = emitWarningOnce;\n/**\n * Takes a JS object and joins the values into a string separated by ', '\n */\nfunction enumToString(en) {\n  return Object.values(en).join(', ');\n}\nexports.enumToString = enumToString;\n/**\n * Determine if a server supports retryable writes.\n *\n * @internal\n */\nfunction supportsRetryableWrites(server) {\n  if (!server) {\n    return false;\n  }\n  if (server.loadBalanced) {\n    // Loadbalanced topologies will always support retry writes\n    return true;\n  }\n  if (server.description.logicalSessionTimeoutMinutes != null) {\n    // that supports sessions\n    if (server.description.type !== common_1.ServerType.Standalone) {\n      // and that is not a standalone\n      return true;\n    }\n  }\n  return false;\n}\nexports.supportsRetryableWrites = supportsRetryableWrites;\n/**\n * Fisher–Yates Shuffle\n *\n * Reference: https://bost.ocks.org/mike/shuffle/\n * @param sequence - items to be shuffled\n * @param limit - Defaults to `0`. If nonzero shuffle will slice the randomized array e.g, `.slice(0, limit)` otherwise will return the entire randomized array.\n */\nfunction shuffle(sequence) {\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var items = Array.from(sequence); // shallow copy in order to never shuffle the input\n  if (limit > items.length) {\n    throw new error_1.MongoRuntimeError('Limit must be less than the number of items');\n  }\n  var remainingItemsToShuffle = items.length;\n  var lowerBound = limit % items.length === 0 ? 1 : items.length - limit;\n  while (remainingItemsToShuffle > lowerBound) {\n    // Pick a remaining element\n    var randomIndex = Math.floor(Math.random() * remainingItemsToShuffle);\n    remainingItemsToShuffle -= 1;\n    // And swap it with the current element\n    var swapHold = items[remainingItemsToShuffle];\n    items[remainingItemsToShuffle] = items[randomIndex];\n    items[randomIndex] = swapHold;\n  }\n  return limit % items.length === 0 ? items : items.slice(lowerBound);\n}\nexports.shuffle = shuffle;\n// TODO(NODE-4936): read concern eligibility for commands should be codified in command construction\n// @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#read-concern\nfunction commandSupportsReadConcern(command) {\n  if (command.aggregate || command.count || command.distinct || command.find || command.geoNear) {\n    return true;\n  }\n  return false;\n}\nexports.commandSupportsReadConcern = commandSupportsReadConcern;\n/**\n * Compare objectIds. `null` is always less\n * - `+1 = oid1 is greater than oid2`\n * - `-1 = oid1 is less than oid2`\n * - `+0 = oid1 is equal oid2`\n */\nfunction compareObjectId(oid1, oid2) {\n  if (oid1 == null && oid2 == null) {\n    return 0;\n  }\n  if (oid1 == null) {\n    return -1;\n  }\n  if (oid2 == null) {\n    return 1;\n  }\n  return exports.ByteUtils.compare(oid1.id, oid2.id);\n}\nexports.compareObjectId = compareObjectId;\nfunction parseInteger(value) {\n  if (typeof value === 'number') return Math.trunc(value);\n  var parsedValue = Number.parseInt(String(value), 10);\n  return Number.isNaN(parsedValue) ? null : parsedValue;\n}\nexports.parseInteger = parseInteger;\nfunction parseUnsignedInteger(value) {\n  var parsedInt = parseInteger(value);\n  return parsedInt != null && parsedInt >= 0 ? parsedInt : null;\n}\nexports.parseUnsignedInteger = parseUnsignedInteger;\n/**\n * Determines whether a provided address matches the provided parent domain.\n *\n * If a DNS server were to become compromised SRV records would still need to\n * advertise addresses that are under the same domain as the srvHost.\n *\n * @param address - The address to check against a domain\n * @param srvHost - The domain to check the provided address against\n * @returns Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(address, srvHost) {\n  // Remove trailing dot if exists on either the resolved address or the srv hostname\n  var normalizedAddress = address.endsWith('.') ? address.slice(0, address.length - 1) : address;\n  var normalizedSrvHost = srvHost.endsWith('.') ? srvHost.slice(0, srvHost.length - 1) : srvHost;\n  var allCharacterBeforeFirstDot = /^.*?\\./;\n  // Remove all characters before first dot\n  // Add leading dot back to string so\n  //   an srvHostDomain = '.trusted.site'\n  //   will not satisfy an addressDomain that endsWith '.fake-trusted.site'\n  var addressDomain = \".\".concat(normalizedAddress.replace(allCharacterBeforeFirstDot, ''));\n  var srvHostDomain = \".\".concat(normalizedSrvHost.replace(allCharacterBeforeFirstDot, ''));\n  return addressDomain.endsWith(srvHostDomain);\n}\nexports.matchesParentDomain = matchesParentDomain;\nfunction request(_x) {\n  return _request.apply(this, arguments);\n}\nfunction _request() {\n  _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(uri) {\n    var options,\n      _args4 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n          return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var requestOptions = _objectSpread(_objectSpread({\n              method: 'GET',\n              timeout: 10000,\n              json: true\n            }, url.parse(uri)), options);\n            var req = http.request(requestOptions, function (res) {\n              res.setEncoding('utf8');\n              var data = '';\n              res.on('data', function (d) {\n                data += d;\n              });\n              res.once('end', function () {\n                if (options.json === false) {\n                  resolve(data);\n                  return;\n                }\n                try {\n                  var parsed = JSON.parse(data);\n                  resolve(parsed);\n                } catch (_unused) {\n                  // TODO(NODE-3483)\n                  reject(new error_1.MongoRuntimeError(\"Invalid JSON response: \\\"\".concat(data, \"\\\"\")));\n                }\n              });\n            });\n            req.once('timeout', function () {\n              return req.destroy(new error_1.MongoNetworkTimeoutError(\"Network request to \".concat(uri, \" timed out after \").concat(options.timeout, \" ms\")));\n            });\n            req.once('error', function (error) {\n              return reject(error);\n            });\n            req.end();\n          }));\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee2);\n  }));\n  return _request.apply(this, arguments);\n}\nexports.request = request;","map":{"version":3,"names":["crypto","require","http","url","url_1","bson_1","constants_1","constants_2","error_1","read_concern_1","read_preference_1","common_1","write_concern_1","exports","ByteUtils","toLocalBufferType","buffer","Buffer","isBuffer","from","byteOffset","byteLength","equals","seqA","seqB","compare","toBase64","uint8array","toString","hostMatchesWildcards","host","wildcards","_iterator","_createForOfIteratorHelper","_step","s","n","done","wildcard","value","startsWith","endsWith","substring","length","err","e","f","checkCollectionName","collectionName","MongoInvalidArgumentError","indexOf","match","normalizeHintField","hint","finalHint","undefined","Array","isArray","forEach","param","name","TO_STRING","object","Object","prototype","call","isObject","arg","mergeOptions","target","source","_objectSpread","filterOptions","options","names","includes","applyRetryableWrites","db","_db$s$options","retryWrites","isPromiseLike","then","decorateWithCollation","command","capabilities","getTopology","collation","commandsTakeCollation","MongoCompatibilityError","decorateWithReadConcern","coll","session","inTransaction","readConcern","assign","keys","decorateWithExplain","explain","verbosity","provider","topology","client","MongoNotConnectedError","ns","MongoDBNamespace","fromString","collection","_classCallCheck","_createClass","key","concat","withCollection","MongoDBCollectionNamespace","namespace","MongoRuntimeError","_namespace$split","split","_namespace$split2","_toArray","collectionParts","slice","join","_MongoDBNamespace","_inherits","_super","_createSuper","_this","_get","_getPrototypeOf","makeCounter","seed","arguments","_regeneratorRuntime","mark","_callee","count","newCount","wrap","_callee$","_context","prev","next","stop","maybeCallback","promiseFn","callback","promise","result","error","databaseNamespace","uuidV4","randomBytes","maxWireVersion","topologyOrServer","loadBalanced","MAX_SUPPORTED_WIRE_VERSION","hello","lastHello","description","eachAsync","arr","eachFn","idx","awaiting","eachCallback","arrayStrictEqual","arr2","every","elt","errorStrictEqual","lhs","rhs","constructor","message","makeStateMachine","stateTable","stateTransition","newState","legalStates","state","emit","now","hrtime","process","Math","floor","calculateDurationInMs","started","elapsed","hasAtomicOperators","doc","_iterator2","_step2","document","resolveOptions","parent","_read_preference_1$Re","resolveBSONOptions","_read_concern_1$ReadC","_write_concern_1$Writ","ReadConcern","fromOptions","writeConcern","WriteConcern","readPreference","ReadPreference","isSuperset","set","subset","Set","_iterator3","_step3","elem","has","isHello","LEGACY_HELLO_COMMAND","setDifference","setA","setB","difference","_iterator4","_step4","delete","HAS_OWN","prop","hasOwnProperty","isRecord","requiredKeys","ctor","deepCopy","map","item","res","toLowerCase","Number","Map","List","_Symbol$toStringTag","_Symbol$iterator","head","get","toArray","_iterator5","_step5","node","value$","_context2","nodes","t0","finish","ptr","_ptr","nodes$","_context3","push","newNode","pushMany","iterable","_iterator6","_step6","unshift","remove","prevNode","nextNode","shift","pop","prune","filter","_iterator7","_step7","clear","first","last","Symbol","toStringTag","iterator","BufferPool","buffers","totalByteLength","append","getInt32","firstBuffer","readInt32LE","top4Bytes","read","size","alloc","allocUnsafe","bytesRead","bytesRemaining","bytesReadable","min","bytes","subarray","HostAddress","_Symbol$for","hostString","port","socketPath","isIPv6","escapedHost","decodeURIComponent","urlString","URL","urlError","runtimeError","cause","hostname","normalized","parseInt","MongoParseError","freeze","inspect","toHostPort","_this$host","_this$port","fromHostPort","fromSrvRecord","_ref","for","DEFAULT_PK_FACTORY","createPk","ObjectId","MONGODB_WARNING_CODE","emitWarning","code","emittedWarnings","emitWarningOnce","add","enumToString","en","values","supportsRetryableWrites","server","logicalSessionTimeoutMinutes","type","ServerType","Standalone","shuffle","sequence","limit","items","remainingItemsToShuffle","lowerBound","randomIndex","random","swapHold","commandSupportsReadConcern","aggregate","distinct","find","geoNear","compareObjectId","oid1","oid2","id","parseInteger","trunc","parsedValue","String","isNaN","parseUnsignedInteger","parsedInt","matchesParentDomain","address","srvHost","normalizedAddress","normalizedSrvHost","allCharacterBeforeFirstDot","addressDomain","replace","srvHostDomain","request","_x","_request","apply","_asyncToGenerator","_callee2","uri","_args4","_callee2$","_context4","abrupt","Promise","resolve","reject","requestOptions","method","timeout","json","parse","req","setEncoding","data","on","d","once","parsed","JSON","_unused","destroy","MongoNetworkTimeoutError","end"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\utils.ts"],"sourcesContent":["import * as crypto from 'crypto';\nimport type { SrvRecord } from 'dns';\nimport * as http from 'http';\nimport * as url from 'url';\nimport { URL } from 'url';\n\nimport { type Document, ObjectId, resolveBSONOptions } from './bson';\nimport type { Connection } from './cmap/connection';\nimport { MAX_SUPPORTED_WIRE_VERSION } from './cmap/wire_protocol/constants';\nimport type { Collection } from './collection';\nimport { LEGACY_HELLO_COMMAND } from './constants';\nimport type { AbstractCursor } from './cursor/abstract_cursor';\nimport type { FindCursor } from './cursor/find_cursor';\nimport type { Db } from './db';\nimport {\n  type AnyError,\n  MongoCompatibilityError,\n  MongoInvalidArgumentError,\n  MongoNetworkTimeoutError,\n  MongoNotConnectedError,\n  MongoParseError,\n  MongoRuntimeError\n} from './error';\nimport type { Explain } from './explain';\nimport type { MongoClient } from './mongo_client';\nimport type { CommandOperationOptions, OperationParent } from './operations/command';\nimport type { Hint, OperationOptions } from './operations/operation';\nimport { ReadConcern } from './read_concern';\nimport { ReadPreference } from './read_preference';\nimport { ServerType } from './sdam/common';\nimport type { Server } from './sdam/server';\nimport type { Topology } from './sdam/topology';\nimport type { ClientSession } from './sessions';\nimport { WriteConcern } from './write_concern';\n\n/**\n * MongoDB Driver style callback\n * @public\n */\nexport type Callback<T = any> = (error?: AnyError, result?: T) => void;\n\nexport type AnyOptions = Document;\n\nexport const ByteUtils = {\n  toLocalBufferType(this: void, buffer: Buffer | Uint8Array): Buffer {\n    return Buffer.isBuffer(buffer)\n      ? buffer\n      : Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  },\n\n  equals(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).equals(seqB);\n  },\n\n  compare(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).compare(seqB);\n  },\n\n  toBase64(this: void, uint8array: Uint8Array) {\n    return ByteUtils.toLocalBufferType(uint8array).toString('base64');\n  }\n};\n\n/**\n * Determines if a connection's address matches a user provided list\n * of domain wildcards.\n */\nexport function hostMatchesWildcards(host: string, wildcards: string[]): boolean {\n  for (const wildcard of wildcards) {\n    if (\n      host === wildcard ||\n      (wildcard.startsWith('*.') && host?.endsWith(wildcard.substring(2, wildcard.length))) ||\n      (wildcard.startsWith('*/') && host?.endsWith(wildcard.substring(2, wildcard.length)))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Throws if collectionName is not a valid mongodb collection namespace.\n * @internal\n */\nexport function checkCollectionName(collectionName: string): void {\n  if ('string' !== typeof collectionName) {\n    throw new MongoInvalidArgumentError('Collection name must be a String');\n  }\n\n  if (!collectionName || collectionName.indexOf('..') !== -1) {\n    throw new MongoInvalidArgumentError('Collection names cannot be empty');\n  }\n\n  if (\n    collectionName.indexOf('$') !== -1 &&\n    collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null\n  ) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError(\"Collection names must not contain '$'\");\n  }\n\n  if (collectionName.match(/^\\.|\\.$/) != null) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError(\"Collection names must not start or end with '.'\");\n  }\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (collectionName.indexOf('\\x00') !== -1) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError('Collection names cannot contain a null character');\n  }\n}\n\n/**\n * Ensure Hint field is in a shape we expect:\n * - object of index names mapping to 1 or -1\n * - just an index name\n * @internal\n */\nexport function normalizeHintField(hint?: Hint): Hint | undefined {\n  let finalHint = undefined;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n\n    hint.forEach(param => {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {} as Document;\n    for (const name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n\n  return finalHint;\n}\n\nconst TO_STRING = (object: unknown) => Object.prototype.toString.call(object);\n/**\n * Checks if arg is an Object:\n * - **NOTE**: the check is based on the `[Symbol.toStringTag]() === 'Object'`\n * @internal\n */\n\nexport function isObject(arg: unknown): arg is object {\n  return '[object Object]' === TO_STRING(arg);\n}\n\n/** @internal */\nexport function mergeOptions<T, S>(target: T, source: S): T & S {\n  return { ...target, ...source };\n}\n\n/** @internal */\nexport function filterOptions(options: AnyOptions, names: ReadonlyArray<string>): AnyOptions {\n  const filterOptions: AnyOptions = {};\n\n  for (const name in options) {\n    if (names.includes(name)) {\n      filterOptions[name] = options[name];\n    }\n  }\n\n  // Filtered options\n  return filterOptions;\n}\n\ninterface HasRetryableWrites {\n  retryWrites?: boolean;\n}\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n * @internal\n *\n * @param target - The target command to which we will apply retryWrites.\n * @param db - The database from which we can inherit a retryWrites value.\n */\nexport function applyRetryableWrites<T extends HasRetryableWrites>(target: T, db?: Db): T {\n  if (db && db.s.options?.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  return target;\n}\n\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n * @internal\n *\n * @param target - the target command we will be applying the write concern to\n * @param sources - sources where we can inherit default write concerns from\n * @param options - optional settings passed into a command for write concern overrides\n */\n\n/**\n * Checks if a given value is a Promise\n *\n * @typeParam T - The resolution type of the possible promise\n * @param value - An object that could be a promise\n * @returns true if the provided value is a Promise\n */\nexport function isPromiseLike<T = any>(value?: PromiseLike<T> | void): value is Promise<T> {\n  return !!value && typeof value.then === 'function';\n}\n\n/**\n * Applies collation to a given command.\n * @internal\n *\n * @param command - the command on which to apply collation\n * @param target - target of command\n * @param options - options containing collation settings\n */\nexport function decorateWithCollation(\n  command: Document,\n  target: MongoClient | Db | Collection,\n  options: AnyOptions\n): void {\n  const capabilities = getTopology(target).capabilities;\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new MongoCompatibilityError(`Current topology does not support collation`);\n    }\n  }\n}\n\n/**\n * Applies a read concern to a given command.\n * @internal\n *\n * @param command - the command on which to apply the read concern\n * @param coll - the parent collection of the operation calling this method\n */\nexport function decorateWithReadConcern(\n  command: Document,\n  coll: { s: { readConcern?: ReadConcern } },\n  options?: OperationOptions\n): void {\n  if (options && options.session && options.session.inTransaction()) {\n    return;\n  }\n  const readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\n/**\n * Applies an explain to a given command.\n * @internal\n *\n * @param command - the command on which to apply the explain\n * @param options - the options containing the explain verbosity\n */\nexport function decorateWithExplain(command: Document, explain: Explain): Document {\n  if (command.explain) {\n    return command;\n  }\n\n  return { explain: command, verbosity: explain.verbosity };\n}\n\n/**\n * @internal\n */\nexport type TopologyProvider =\n  | MongoClient\n  | ClientSession\n  | FindCursor\n  | AbstractCursor\n  | Collection<any>\n  | Db;\n\n/**\n * A helper function to get the topology from a given provider. Throws\n * if the topology cannot be found.\n * @throws MongoNotConnectedError\n * @internal\n */\nexport function getTopology(provider: TopologyProvider): Topology {\n  // MongoClient or ClientSession or AbstractCursor\n  if ('topology' in provider && provider.topology) {\n    return provider.topology;\n  } else if ('client' in provider && provider.client.topology) {\n    return provider.client.topology;\n  }\n\n  throw new MongoNotConnectedError('MongoClient must be connected to perform this operation');\n}\n\n/** @internal */\nexport function ns(ns: string): MongoDBNamespace {\n  return MongoDBNamespace.fromString(ns);\n}\n\n/** @public */\nexport class MongoDBNamespace {\n  /**\n   * Create a namespace object\n   *\n   * @param db - database name\n   * @param collection - collection name\n   */\n  constructor(public db: string, public collection?: string) {\n    this.collection = collection === '' ? undefined : collection;\n  }\n\n  toString(): string {\n    return this.collection ? `${this.db}.${this.collection}` : this.db;\n  }\n\n  withCollection(collection: string): MongoDBCollectionNamespace {\n    return new MongoDBCollectionNamespace(this.db, collection);\n  }\n\n  static fromString(namespace?: string): MongoDBNamespace {\n    if (typeof namespace !== 'string' || namespace === '') {\n      // TODO(NODE-3483): Replace with MongoNamespaceError\n      throw new MongoRuntimeError(`Cannot parse namespace from \"${namespace}\"`);\n    }\n\n    const [db, ...collectionParts] = namespace.split('.');\n    const collection = collectionParts.join('.');\n    return new MongoDBNamespace(db, collection === '' ? undefined : collection);\n  }\n}\n\n/**\n * @public\n *\n * A class representing a collection's namespace.  This class enforces (through Typescript) that\n * the `collection` portion of the namespace is defined and should only be\n * used in scenarios where this can be guaranteed.\n */\nexport class MongoDBCollectionNamespace extends MongoDBNamespace {\n  constructor(db: string, override collection: string) {\n    super(db, collection);\n  }\n\n  static override fromString(namespace?: string): MongoDBCollectionNamespace {\n    return super.fromString(namespace) as MongoDBCollectionNamespace;\n  }\n}\n\n/** @internal */\nexport function* makeCounter(seed = 0): Generator<number> {\n  let count = seed;\n  while (true) {\n    const newCount = count;\n    count += 1;\n    yield newCount;\n  }\n}\n\n/**\n * Helper for handling legacy callback support.\n */\nexport function maybeCallback<T>(promiseFn: () => Promise<T>, callback: null): Promise<T>;\nexport function maybeCallback<T>(\n  promiseFn: () => Promise<T>,\n  callback?: Callback<T>\n): Promise<T> | void;\nexport function maybeCallback<T>(\n  promiseFn: () => Promise<T>,\n  callback?: Callback<T> | null\n): Promise<T> | void {\n  const promise = promiseFn();\n  if (callback == null) {\n    return promise;\n  }\n\n  promise.then(\n    result => callback(undefined, result),\n    error => callback(error)\n  );\n  return;\n}\n\n/** @internal */\nexport function databaseNamespace(ns: string): string {\n  return ns.split('.')[0];\n}\n\n/**\n * Synchronously Generate a UUIDv4\n * @internal\n */\nexport function uuidV4(): Buffer {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n}\n\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology instances\n * @internal\n */\nexport function maxWireVersion(topologyOrServer?: Connection | Topology | Server): number {\n  if (topologyOrServer) {\n    if (topologyOrServer.loadBalanced) {\n      // Since we do not have a monitor, we assume the load balanced server is always\n      // pointed at the latest mongodb version. There is a risk that for on-prem\n      // deployments that don't upgrade immediately that this could alert to the\n      // application that a feature is available that is actually not.\n      return MAX_SUPPORTED_WIRE_VERSION;\n    }\n    if (topologyOrServer.hello) {\n      return topologyOrServer.hello.maxWireVersion;\n    }\n\n    if ('lastHello' in topologyOrServer && typeof topologyOrServer.lastHello === 'function') {\n      const lastHello = topologyOrServer.lastHello();\n      if (lastHello) {\n        return lastHello.maxWireVersion;\n      }\n    }\n\n    if (\n      topologyOrServer.description &&\n      'maxWireVersion' in topologyOrServer.description &&\n      topologyOrServer.description.maxWireVersion != null\n    ) {\n      return topologyOrServer.description.maxWireVersion;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Applies the function `eachFn` to each item in `arr`, in parallel.\n * @internal\n *\n * @param arr - An array of items to asynchronously iterate over\n * @param eachFn - A function to call on each item of the array. The callback signature is `(item, callback)`, where the callback indicates iteration is complete.\n * @param callback - The callback called after every item has been iterated\n */\nexport function eachAsync<T = Document>(\n  arr: T[],\n  eachFn: (item: T, callback: (err?: AnyError) => void) => void,\n  callback: Callback\n): void {\n  arr = arr || [];\n\n  let idx = 0;\n  let awaiting = 0;\n  for (idx = 0; idx < arr.length; ++idx) {\n    awaiting++;\n    eachFn(arr[idx], eachCallback);\n  }\n\n  if (awaiting === 0) {\n    callback();\n    return;\n  }\n\n  function eachCallback(err?: AnyError) {\n    awaiting--;\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (idx === arr.length && awaiting <= 0) {\n      callback();\n    }\n  }\n}\n\n/** @internal */\nexport function arrayStrictEqual(arr: unknown[], arr2: unknown[]): boolean {\n  if (!Array.isArray(arr) || !Array.isArray(arr2)) {\n    return false;\n  }\n\n  return arr.length === arr2.length && arr.every((elt, idx) => elt === arr2[idx]);\n}\n\n/** @internal */\nexport function errorStrictEqual(lhs?: AnyError | null, rhs?: AnyError | null): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n\n  if (!lhs || !rhs) {\n    return lhs === rhs;\n  }\n\n  if ((lhs == null && rhs != null) || (lhs != null && rhs == null)) {\n    return false;\n  }\n\n  if (lhs.constructor.name !== rhs.constructor.name) {\n    return false;\n  }\n\n  if (lhs.message !== rhs.message) {\n    return false;\n  }\n\n  return true;\n}\n\ninterface StateTable {\n  [key: string]: string[];\n}\ninterface ObjectWithState {\n  s: { state: string };\n  emit(event: 'stateChanged', state: string, newState: string): void;\n}\ninterface StateTransitionFunction {\n  (target: ObjectWithState, newState: string): void;\n}\n\n/** @public */\nexport type EventEmitterWithState = {\n  /** @internal */\n  stateChanged(previous: string, current: string): void;\n};\n\n/** @internal */\nexport function makeStateMachine(stateTable: StateTable): StateTransitionFunction {\n  return function stateTransition(target, newState) {\n    const legalStates = stateTable[target.s.state];\n    if (legalStates && legalStates.indexOf(newState) < 0) {\n      throw new MongoRuntimeError(\n        `illegal state transition from [${target.s.state}] => [${newState}], allowed: [${legalStates}]`\n      );\n    }\n\n    target.emit('stateChanged', target.s.state, newState);\n    target.s.state = newState;\n  };\n}\n\n/** @internal */\nexport function now(): number {\n  const hrtime = process.hrtime();\n  return Math.floor(hrtime[0] * 1000 + hrtime[1] / 1000000);\n}\n\n/** @internal */\nexport function calculateDurationInMs(started: number): number {\n  if (typeof started !== 'number') {\n    throw new MongoInvalidArgumentError('Numeric value required to calculate duration');\n  }\n\n  const elapsed = now() - started;\n  return elapsed < 0 ? 0 : elapsed;\n}\n\n/** @internal */\nexport function hasAtomicOperators(doc: Document | Document[]): boolean {\n  if (Array.isArray(doc)) {\n    for (const document of doc) {\n      if (hasAtomicOperators(document)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const keys = Object.keys(doc);\n  return keys.length > 0 && keys[0][0] === '$';\n}\n\n/**\n * Merge inherited properties from parent into options, prioritizing values from options,\n * then values from parent.\n * @internal\n */\nexport function resolveOptions<T extends CommandOperationOptions>(\n  parent: OperationParent | undefined,\n  options?: T\n): T {\n  const result: T = Object.assign({}, options, resolveBSONOptions(options, parent));\n\n  // Users cannot pass a readConcern/writeConcern to operations in a transaction\n  const session = options?.session;\n  if (!session?.inTransaction()) {\n    const readConcern = ReadConcern.fromOptions(options) ?? parent?.readConcern;\n    if (readConcern) {\n      result.readConcern = readConcern;\n    }\n\n    const writeConcern = WriteConcern.fromOptions(options) ?? parent?.writeConcern;\n    if (writeConcern) {\n      result.writeConcern = writeConcern;\n    }\n  }\n\n  const readPreference = ReadPreference.fromOptions(options) ?? parent?.readPreference;\n  if (readPreference) {\n    result.readPreference = readPreference;\n  }\n\n  return result;\n}\n\nexport function isSuperset(set: Set<any> | any[], subset: Set<any> | any[]): boolean {\n  set = Array.isArray(set) ? new Set(set) : set;\n  subset = Array.isArray(subset) ? new Set(subset) : subset;\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if the document is a Hello request\n * @internal\n */\nexport function isHello(doc: Document): boolean {\n  return doc[LEGACY_HELLO_COMMAND] || doc.hello ? true : false;\n}\n\n/** Returns the items that are uniquely in setA */\nexport function setDifference<T>(setA: Iterable<T>, setB: Iterable<T>): Set<T> {\n  const difference = new Set<T>(setA);\n  for (const elem of setB) {\n    difference.delete(elem);\n  }\n  return difference;\n}\n\nconst HAS_OWN = (object: unknown, prop: string) =>\n  Object.prototype.hasOwnProperty.call(object, prop);\n\nexport function isRecord<T extends readonly string[]>(\n  value: unknown,\n  requiredKeys: T\n): value is Record<T[number], any>;\nexport function isRecord(value: unknown): value is Record<string, any>;\nexport function isRecord(\n  value: unknown,\n  requiredKeys: string[] | undefined = undefined\n): value is Record<string, any> {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  const ctor = (value as any).constructor;\n  if (ctor && ctor.prototype) {\n    if (!isObject(ctor.prototype)) {\n      return false;\n    }\n\n    // Check to see if some method exists from the Object exists\n    if (!HAS_OWN(ctor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  }\n\n  if (requiredKeys) {\n    const keys = Object.keys(value as Record<string, any>);\n    return isSuperset(keys, requiredKeys);\n  }\n\n  return true;\n}\n\n/**\n * Make a deep copy of an object\n *\n * NOTE: This is not meant to be the perfect implementation of a deep copy,\n * but instead something that is good enough for the purposes of\n * command monitoring.\n */\nexport function deepCopy<T>(value: T): T {\n  if (value == null) {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value.map(item => deepCopy(item)) as unknown as T;\n  } else if (isRecord(value)) {\n    const res = {} as any;\n    for (const key in value) {\n      res[key] = deepCopy(value[key]);\n    }\n    return res;\n  }\n\n  const ctor = (value as any).constructor;\n  if (ctor) {\n    switch (ctor.name.toLowerCase()) {\n      case 'date':\n        return new ctor(Number(value));\n      case 'map':\n        return new Map(value as any) as unknown as T;\n      case 'set':\n        return new Set(value as any) as unknown as T;\n      case 'buffer':\n        return Buffer.from(value as unknown as Buffer) as unknown as T;\n    }\n  }\n\n  return value;\n}\n\ntype ListNode<T> = {\n  value: T;\n  next: ListNode<T> | HeadNode<T>;\n  prev: ListNode<T> | HeadNode<T>;\n};\n\ntype HeadNode<T> = {\n  value: null;\n  next: ListNode<T>;\n  prev: ListNode<T>;\n};\n\n/**\n * When a list is empty the head is a reference with pointers to itself\n * So this type represents that self referential state\n */\ntype EmptyNode = {\n  value: null;\n  next: EmptyNode;\n  prev: EmptyNode;\n};\n\n/**\n * A sequential list of items in a circularly linked list\n * @remarks\n * The head node is special, it is always defined and has a value of null.\n * It is never \"included\" in the list, in that, it is not returned by pop/shift or yielded by the iterator.\n * The circular linkage and always defined head node are to reduce checks for null next/prev references to zero.\n * New nodes are declared as object literals with keys always in the same order: next, prev, value.\n * @internal\n */\nexport class List<T = unknown> {\n  private readonly head: HeadNode<T> | EmptyNode;\n  private count: number;\n\n  get length() {\n    return this.count;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'List' as const;\n  }\n\n  constructor() {\n    this.count = 0;\n\n    // this is carefully crafted:\n    // declaring a complete and consistently key ordered\n    // object is beneficial to the runtime optimizations\n    this.head = {\n      next: null,\n      prev: null,\n      value: null\n    } as unknown as EmptyNode;\n    this.head.next = this.head;\n    this.head.prev = this.head;\n  }\n\n  toArray() {\n    return Array.from(this);\n  }\n\n  toString() {\n    return `head <=> ${this.toArray().join(' <=> ')} <=> head`;\n  }\n\n  *[Symbol.iterator](): Generator<T, void, void> {\n    for (const node of this.nodes()) {\n      yield node.value;\n    }\n  }\n\n  private *nodes(): Generator<ListNode<T>, void, void> {\n    let ptr: HeadNode<T> | ListNode<T> | EmptyNode = this.head.next;\n    while (ptr !== this.head) {\n      // Save next before yielding so that we make removing within iteration safe\n      const { next } = ptr as ListNode<T>;\n      yield ptr as ListNode<T>;\n      ptr = next;\n    }\n  }\n\n  /** Insert at end of list */\n  push(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head as HeadNode<T>,\n      prev: this.head.prev as ListNode<T>,\n      value\n    };\n    this.head.prev.next = newNode;\n    this.head.prev = newNode;\n  }\n\n  /** Inserts every item inside an iterable instead of the iterable itself */\n  pushMany(iterable: Iterable<T>) {\n    for (const value of iterable) {\n      this.push(value);\n    }\n  }\n\n  /** Insert at front of list */\n  unshift(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head.next as ListNode<T>,\n      prev: this.head as HeadNode<T>,\n      value\n    };\n    this.head.next.prev = newNode;\n    this.head.next = newNode;\n  }\n\n  private remove(node: ListNode<T> | EmptyNode): T | null {\n    if (node === this.head || this.length === 0) {\n      return null;\n    }\n\n    this.count -= 1;\n\n    const prevNode = node.prev;\n    const nextNode = node.next;\n    prevNode.next = nextNode;\n    nextNode.prev = prevNode;\n\n    return node.value;\n  }\n\n  /** Removes the first node at the front of the list */\n  shift(): T | null {\n    return this.remove(this.head.next);\n  }\n\n  /** Removes the last node at the end of the list */\n  pop(): T | null {\n    return this.remove(this.head.prev);\n  }\n\n  /** Iterates through the list and removes nodes where filter returns true */\n  prune(filter: (value: T) => boolean) {\n    for (const node of this.nodes()) {\n      if (filter(node.value)) {\n        this.remove(node);\n      }\n    }\n  }\n\n  clear() {\n    this.count = 0;\n    this.head.next = this.head as EmptyNode;\n    this.head.prev = this.head as EmptyNode;\n  }\n\n  /** Returns the first item in the list, does not remove */\n  first(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.next.value;\n  }\n\n  /** Returns the last item in the list, does not remove */\n  last(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.prev.value;\n  }\n}\n\n/**\n * A pool of Buffers which allow you to read them as if they were one\n * @internal\n */\nexport class BufferPool {\n  private buffers: List<Buffer>;\n  private totalByteLength: number;\n\n  constructor() {\n    this.buffers = new List();\n    this.totalByteLength = 0;\n  }\n\n  get length(): number {\n    return this.totalByteLength;\n  }\n\n  /** Adds a buffer to the internal buffer pool list */\n  append(buffer: Buffer): void {\n    this.buffers.push(buffer);\n    this.totalByteLength += buffer.length;\n  }\n\n  /**\n   * If BufferPool contains 4 bytes or more construct an int32 from the leading bytes,\n   * otherwise return null. Size can be negative, caller should error check.\n   */\n  getInt32(): number | null {\n    if (this.totalByteLength < 4) {\n      return null;\n    }\n    const firstBuffer = this.buffers.first();\n    if (firstBuffer != null && firstBuffer.byteLength >= 4) {\n      return firstBuffer.readInt32LE(0);\n    }\n\n    // Unlikely case: an int32 is split across buffers.\n    // Use read and put the returned buffer back on top\n    const top4Bytes = this.read(4);\n    const value = top4Bytes.readInt32LE(0);\n\n    // Put it back.\n    this.totalByteLength += 4;\n    this.buffers.unshift(top4Bytes);\n\n    return value;\n  }\n\n  /** Reads the requested number of bytes, optionally consuming them */\n  read(size: number): Buffer {\n    if (typeof size !== 'number' || size < 0) {\n      throw new MongoInvalidArgumentError('Argument \"size\" must be a non-negative number');\n    }\n\n    // oversized request returns empty buffer\n    if (size > this.totalByteLength) {\n      return Buffer.alloc(0);\n    }\n\n    // We know we have enough, we just don't know how it is spread across chunks\n    // TODO(NODE-4732): alloc API should change based on raw option\n    const result = Buffer.allocUnsafe(size);\n\n    for (let bytesRead = 0; bytesRead < size; ) {\n      const buffer = this.buffers.shift();\n      if (buffer == null) {\n        break;\n      }\n      const bytesRemaining = size - bytesRead;\n      const bytesReadable = Math.min(bytesRemaining, buffer.byteLength);\n      const bytes = buffer.subarray(0, bytesReadable);\n\n      result.set(bytes, bytesRead);\n\n      bytesRead += bytesReadable;\n      this.totalByteLength -= bytesReadable;\n      if (bytesReadable < buffer.byteLength) {\n        this.buffers.unshift(buffer.subarray(bytesReadable));\n      }\n    }\n\n    return result;\n  }\n}\n\n/** @public */\nexport class HostAddress {\n  host: string | undefined = undefined;\n  port: number | undefined = undefined;\n  socketPath: string | undefined = undefined;\n  isIPv6 = false;\n\n  constructor(hostString: string) {\n    const escapedHost = hostString.split(' ').join('%20'); // escape spaces, for socket path hosts\n\n    if (escapedHost.endsWith('.sock')) {\n      // heuristically determine if we're working with a domain socket\n      this.socketPath = decodeURIComponent(escapedHost);\n      return;\n    }\n\n    const urlString = `iLoveJS://${escapedHost}`;\n    let url;\n    try {\n      url = new URL(urlString);\n    } catch (urlError) {\n      const runtimeError = new MongoRuntimeError(`Unable to parse ${escapedHost} with URL`);\n      runtimeError.cause = urlError;\n      throw runtimeError;\n    }\n\n    const hostname = url.hostname;\n    const port = url.port;\n\n    let normalized = decodeURIComponent(hostname).toLowerCase();\n    if (normalized.startsWith('[') && normalized.endsWith(']')) {\n      this.isIPv6 = true;\n      normalized = normalized.substring(1, hostname.length - 1);\n    }\n\n    this.host = normalized.toLowerCase();\n\n    if (typeof port === 'number') {\n      this.port = port;\n    } else if (typeof port === 'string' && port !== '') {\n      this.port = Number.parseInt(port, 10);\n    } else {\n      this.port = 27017;\n    }\n\n    if (this.port === 0) {\n      throw new MongoParseError('Invalid port (zero) with hostname');\n    }\n    Object.freeze(this);\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new HostAddress('${this.toString()}')`;\n  }\n\n  toString(): string {\n    if (typeof this.host === 'string') {\n      if (this.isIPv6) {\n        return `[${this.host}]:${this.port}`;\n      }\n      return `${this.host}:${this.port}`;\n    }\n    return `${this.socketPath}`;\n  }\n\n  static fromString(this: void, s: string): HostAddress {\n    return new HostAddress(s);\n  }\n\n  static fromHostPort(host: string, port: number): HostAddress {\n    if (host.includes(':')) {\n      host = `[${host}]`; // IPv6 address\n    }\n    return HostAddress.fromString(`${host}:${port}`);\n  }\n\n  static fromSrvRecord({ name, port }: SrvRecord): HostAddress {\n    return HostAddress.fromHostPort(name, port);\n  }\n\n  toHostPort(): { host: string; port: number } {\n    if (this.socketPath) {\n      return { host: this.socketPath, port: 0 };\n    }\n\n    const host = this.host ?? '';\n    const port = this.port ?? 0;\n    return { host, port };\n  }\n}\n\nexport const DEFAULT_PK_FACTORY = {\n  // We prefer not to rely on ObjectId having a createPk method\n  createPk(): ObjectId {\n    return new ObjectId();\n  }\n};\n\n/**\n * When the driver used emitWarning the code will be equal to this.\n * @public\n *\n * @example\n * ```ts\n * process.on('warning', (warning) => {\n *  if (warning.code === MONGODB_WARNING_CODE) console.error('Ah an important warning! :)')\n * })\n * ```\n */\nexport const MONGODB_WARNING_CODE = 'MONGODB DRIVER' as const;\n\n/** @internal */\nexport function emitWarning(message: string): void {\n  return process.emitWarning(message, { code: MONGODB_WARNING_CODE } as any);\n}\n\nconst emittedWarnings = new Set();\n/**\n * Will emit a warning once for the duration of the application.\n * Uses the message to identify if it has already been emitted\n * so using string interpolation can cause multiple emits\n * @internal\n */\nexport function emitWarningOnce(message: string): void {\n  if (!emittedWarnings.has(message)) {\n    emittedWarnings.add(message);\n    return emitWarning(message);\n  }\n}\n\n/**\n * Takes a JS object and joins the values into a string separated by ', '\n */\nexport function enumToString(en: Record<string, unknown>): string {\n  return Object.values(en).join(', ');\n}\n\n/**\n * Determine if a server supports retryable writes.\n *\n * @internal\n */\nexport function supportsRetryableWrites(server?: Server): boolean {\n  if (!server) {\n    return false;\n  }\n\n  if (server.loadBalanced) {\n    // Loadbalanced topologies will always support retry writes\n    return true;\n  }\n\n  if (server.description.logicalSessionTimeoutMinutes != null) {\n    // that supports sessions\n    if (server.description.type !== ServerType.Standalone) {\n      // and that is not a standalone\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Fisher–Yates Shuffle\n *\n * Reference: https://bost.ocks.org/mike/shuffle/\n * @param sequence - items to be shuffled\n * @param limit - Defaults to `0`. If nonzero shuffle will slice the randomized array e.g, `.slice(0, limit)` otherwise will return the entire randomized array.\n */\nexport function shuffle<T>(sequence: Iterable<T>, limit = 0): Array<T> {\n  const items = Array.from(sequence); // shallow copy in order to never shuffle the input\n\n  if (limit > items.length) {\n    throw new MongoRuntimeError('Limit must be less than the number of items');\n  }\n\n  let remainingItemsToShuffle = items.length;\n  const lowerBound = limit % items.length === 0 ? 1 : items.length - limit;\n  while (remainingItemsToShuffle > lowerBound) {\n    // Pick a remaining element\n    const randomIndex = Math.floor(Math.random() * remainingItemsToShuffle);\n    remainingItemsToShuffle -= 1;\n\n    // And swap it with the current element\n    const swapHold = items[remainingItemsToShuffle];\n    items[remainingItemsToShuffle] = items[randomIndex];\n    items[randomIndex] = swapHold;\n  }\n\n  return limit % items.length === 0 ? items : items.slice(lowerBound);\n}\n\n// TODO(NODE-4936): read concern eligibility for commands should be codified in command construction\n// @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#read-concern\nexport function commandSupportsReadConcern(command: Document): boolean {\n  if (command.aggregate || command.count || command.distinct || command.find || command.geoNear) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Compare objectIds. `null` is always less\n * - `+1 = oid1 is greater than oid2`\n * - `-1 = oid1 is less than oid2`\n * - `+0 = oid1 is equal oid2`\n */\nexport function compareObjectId(oid1?: ObjectId | null, oid2?: ObjectId | null): 0 | 1 | -1 {\n  if (oid1 == null && oid2 == null) {\n    return 0;\n  }\n\n  if (oid1 == null) {\n    return -1;\n  }\n\n  if (oid2 == null) {\n    return 1;\n  }\n\n  return ByteUtils.compare(oid1.id, oid2.id);\n}\n\nexport function parseInteger(value: unknown): number | null {\n  if (typeof value === 'number') return Math.trunc(value);\n  const parsedValue = Number.parseInt(String(value), 10);\n\n  return Number.isNaN(parsedValue) ? null : parsedValue;\n}\n\nexport function parseUnsignedInteger(value: unknown): number | null {\n  const parsedInt = parseInteger(value);\n\n  return parsedInt != null && parsedInt >= 0 ? parsedInt : null;\n}\n\n/**\n * Determines whether a provided address matches the provided parent domain.\n *\n * If a DNS server were to become compromised SRV records would still need to\n * advertise addresses that are under the same domain as the srvHost.\n *\n * @param address - The address to check against a domain\n * @param srvHost - The domain to check the provided address against\n * @returns Whether the provided address matches the parent domain\n */\nexport function matchesParentDomain(address: string, srvHost: string): boolean {\n  // Remove trailing dot if exists on either the resolved address or the srv hostname\n  const normalizedAddress = address.endsWith('.') ? address.slice(0, address.length - 1) : address;\n  const normalizedSrvHost = srvHost.endsWith('.') ? srvHost.slice(0, srvHost.length - 1) : srvHost;\n\n  const allCharacterBeforeFirstDot = /^.*?\\./;\n  // Remove all characters before first dot\n  // Add leading dot back to string so\n  //   an srvHostDomain = '.trusted.site'\n  //   will not satisfy an addressDomain that endsWith '.fake-trusted.site'\n  const addressDomain = `.${normalizedAddress.replace(allCharacterBeforeFirstDot, '')}`;\n  const srvHostDomain = `.${normalizedSrvHost.replace(allCharacterBeforeFirstDot, '')}`;\n\n  return addressDomain.endsWith(srvHostDomain);\n}\n\ninterface RequestOptions {\n  json?: boolean;\n  method?: string;\n  timeout?: number;\n  headers?: http.OutgoingHttpHeaders;\n}\n\nexport async function request(uri: string): Promise<Record<string, any>>;\nexport async function request(\n  uri: string,\n  options?: { json?: true } & RequestOptions\n): Promise<Record<string, any>>;\nexport async function request(\n  uri: string,\n  options?: { json: false } & RequestOptions\n): Promise<string>;\nexport async function request(\n  uri: string,\n  options: RequestOptions = {}\n): Promise<string | Record<string, any>> {\n  return new Promise<string | Record<string, any>>((resolve, reject) => {\n    const requestOptions = {\n      method: 'GET',\n      timeout: 10000,\n      json: true,\n      ...url.parse(uri),\n      ...options\n    };\n\n    const req = http.request(requestOptions, res => {\n      res.setEncoding('utf8');\n\n      let data = '';\n      res.on('data', d => {\n        data += d;\n      });\n\n      res.once('end', () => {\n        if (options.json === false) {\n          resolve(data);\n          return;\n        }\n\n        try {\n          const parsed = JSON.parse(data);\n          resolve(parsed);\n        } catch {\n          // TODO(NODE-3483)\n          reject(new MongoRuntimeError(`Invalid JSON response: \"${data}\"`));\n        }\n      });\n    });\n\n    req.once('timeout', () =>\n      req.destroy(\n        new MongoNetworkTimeoutError(\n          `Network request to ${uri} timed out after ${options.timeout} ms`\n        )\n      )\n    );\n    req.once('error', error => reject(error));\n    req.end();\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}