{"ast":null,"code":"\"use strict\";\n\nvar _get = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _slicedToArray = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _objectSpread = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexInformationOperation = exports.IndexExistsOperation = exports.ListIndexesOperation = exports.DropIndexOperation = exports.EnsureIndexOperation = exports.CreateIndexOperation = exports.CreateIndexesOperation = exports.IndexesOperation = void 0;\nvar error_1 = require(\"../error\");\nvar read_preference_1 = require(\"../read_preference\");\nvar utils_1 = require(\"../utils\");\nvar command_1 = require(\"./command\");\nvar common_functions_1 = require(\"./common_functions\");\nvar operation_1 = require(\"./operation\");\nvar VALID_INDEX_OPTIONS = new Set(['background', 'unique', 'name', 'partialFilterExpression', 'sparse', 'hidden', 'expireAfterSeconds', 'storageEngine', 'collation', 'version',\n// text indexes\n'weights', 'default_language', 'language_override', 'textIndexVersion',\n// 2d-sphere indexes\n'2dsphereIndexVersion',\n// 2d indexes\n'bits', 'min', 'max',\n// geoHaystack Indexes\n'bucketSize',\n// wildcard indexes\n'wildcardProjection']);\nfunction isIndexDirection(x) {\n  return typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack';\n}\nfunction isSingleIndexTuple(t) {\n  return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);\n}\nfunction makeIndexSpec(indexSpec, options) {\n  var key = new Map();\n  var indexSpecs = !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;\n  // Iterate through array and handle different types\n  var _iterator = _createForOfIteratorHelper(indexSpecs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var spec = _step.value;\n      if (typeof spec === 'string') {\n        key.set(spec, 1);\n      } else if (Array.isArray(spec)) {\n        var _spec$;\n        key.set(spec[0], (_spec$ = spec[1]) !== null && _spec$ !== void 0 ? _spec$ : 1);\n      } else if (spec instanceof Map) {\n        var _iterator2 = _createForOfIteratorHelper(spec),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n              property = _step2$value[0],\n              value = _step2$value[1];\n            key.set(property, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if ((0, utils_1.isObject)(spec)) {\n        for (var _i = 0, _Object$entries = Object.entries(spec); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            _property = _Object$entries$_i[0],\n            _value = _Object$entries$_i[1];\n          key.set(_property, _value);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return _objectSpread(_objectSpread({}, options), {}, {\n    key: key\n  });\n}\n/** @internal */\nvar IndexesOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(IndexesOperation, _operation_1$Abstract);\n  var _super = _createSuper(IndexesOperation);\n  function IndexesOperation(collection, options) {\n    var _this;\n    _classCallCheck(this, IndexesOperation);\n    _this = _super.call(this, options);\n    _this.options = options;\n    _this.collection = collection;\n    return _this;\n  }\n  _createClass(IndexesOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_server, session) {\n        var coll, options;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              coll = this.collection;\n              options = this.options;\n              return _context.abrupt(\"return\", (0, common_functions_1.indexInformation)(coll.s.db, coll.collectionName, _objectSpread(_objectSpread({\n                full: true\n              }, options), {}, {\n                readPreference: this.readPreference,\n                session: session\n              })));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return IndexesOperation;\n}(operation_1.AbstractOperation);\nexports.IndexesOperation = IndexesOperation;\n/** @internal */\nvar CreateIndexesOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(CreateIndexesOperation, _command_1$CommandOpe);\n  var _super2 = _createSuper(CreateIndexesOperation);\n  function CreateIndexesOperation(parent, collectionName, indexes, options) {\n    var _this2;\n    _classCallCheck(this, CreateIndexesOperation);\n    _this2 = _super2.call(this, parent, options);\n    _this2.options = options !== null && options !== void 0 ? options : {};\n    _this2.collectionName = collectionName;\n    _this2.indexes = indexes.map(function (userIndex) {\n      // Ensure the key is a Map to preserve index key ordering\n      var key = userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));\n      var name = userIndex.name != null ? userIndex.name : Array.from(key).flat().join('_');\n      var validIndexOptions = Object.fromEntries(Object.entries(_objectSpread({}, userIndex)).filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n          optionName = _ref2[0];\n        return VALID_INDEX_OPTIONS.has(optionName);\n      }));\n      return _objectSpread(_objectSpread({}, validIndexOptions), {}, {\n        name: name,\n        key: key\n      });\n    });\n    return _this2;\n  }\n  _createClass(CreateIndexesOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(server, session) {\n        var options, indexes, serverWireVersion, cmd, indexNames;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = this.options;\n              indexes = this.indexes;\n              serverWireVersion = (0, utils_1.maxWireVersion)(server);\n              cmd = {\n                createIndexes: this.collectionName,\n                indexes: indexes\n              };\n              if (!(options.commitQuorum != null)) {\n                _context2.next = 8;\n                break;\n              }\n              if (!(serverWireVersion < 9)) {\n                _context2.next = 7;\n                break;\n              }\n              throw new error_1.MongoCompatibilityError('Option `commitQuorum` for `createIndexes` not supported on servers < 4.4');\n            case 7:\n              cmd.commitQuorum = options.commitQuorum;\n            case 8:\n              // collation is set on each index, it should not be defined at the root\n              this.options.collation = undefined;\n              _context2.next = 11;\n              return _get(_getPrototypeOf(CreateIndexesOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd);\n            case 11:\n              indexNames = indexes.map(function (index) {\n                return index.name || '';\n              });\n              return _context2.abrupt(\"return\", indexNames);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function execute(_x3, _x4) {\n        return _execute2.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return CreateIndexesOperation;\n}(command_1.CommandOperation);\nexports.CreateIndexesOperation = CreateIndexesOperation;\n/** @internal */\nvar CreateIndexOperation = /*#__PURE__*/function (_CreateIndexesOperati) {\n  _inherits(CreateIndexOperation, _CreateIndexesOperati);\n  var _super3 = _createSuper(CreateIndexOperation);\n  function CreateIndexOperation(parent, collectionName, indexSpec, options) {\n    _classCallCheck(this, CreateIndexOperation);\n    return _super3.call(this, parent, collectionName, [makeIndexSpec(indexSpec, options)], options);\n  }\n  _createClass(CreateIndexOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(server, session) {\n        var indexNames;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _get(_getPrototypeOf(CreateIndexOperation.prototype), \"execute\", this).call(this, server, session);\n            case 2:\n              indexNames = _context3.sent;\n              return _context3.abrupt(\"return\", indexNames[0]);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function execute(_x5, _x6) {\n        return _execute3.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return CreateIndexOperation;\n}(CreateIndexesOperation);\nexports.CreateIndexOperation = CreateIndexOperation;\n/** @internal */\nvar EnsureIndexOperation = /*#__PURE__*/function (_CreateIndexOperation) {\n  _inherits(EnsureIndexOperation, _CreateIndexOperation);\n  var _super4 = _createSuper(EnsureIndexOperation);\n  function EnsureIndexOperation(db, collectionName, indexSpec, options) {\n    var _this3;\n    _classCallCheck(this, EnsureIndexOperation);\n    _this3 = _super4.call(this, db, collectionName, indexSpec, options);\n    _this3.readPreference = read_preference_1.ReadPreference.primary;\n    _this3.db = db;\n    _this3.collectionName = collectionName;\n    return _this3;\n  }\n  _createClass(EnsureIndexOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(server, session) {\n        var indexName, indexes;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              indexName = this.indexes[0].name;\n              _context4.next = 3;\n              return this.db.collection(this.collectionName).listIndexes({\n                session: session\n              }).toArray().catch(function (error) {\n                if (error instanceof error_1.MongoError && error.code === error_1.MONGODB_ERROR_CODES.NamespaceNotFound) return [];\n                throw error;\n              });\n            case 3:\n              indexes = _context4.sent;\n              if (!(indexName && indexes.some(function (index) {\n                return index.name === indexName;\n              }))) {\n                _context4.next = 6;\n                break;\n              }\n              return _context4.abrupt(\"return\", indexName);\n            case 6:\n              return _context4.abrupt(\"return\", _get(_getPrototypeOf(EnsureIndexOperation.prototype), \"execute\", this).call(this, server, session));\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function execute(_x7, _x8) {\n        return _execute4.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return EnsureIndexOperation;\n}(CreateIndexOperation);\nexports.EnsureIndexOperation = EnsureIndexOperation;\n/** @internal */\nvar DropIndexOperation = /*#__PURE__*/function (_command_1$CommandOpe2) {\n  _inherits(DropIndexOperation, _command_1$CommandOpe2);\n  var _super5 = _createSuper(DropIndexOperation);\n  function DropIndexOperation(collection, indexName, options) {\n    var _this4;\n    _classCallCheck(this, DropIndexOperation);\n    _this4 = _super5.call(this, collection, options);\n    _this4.options = options !== null && options !== void 0 ? options : {};\n    _this4.collection = collection;\n    _this4.indexName = indexName;\n    return _this4;\n  }\n  _createClass(DropIndexOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(server, session) {\n        var cmd;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              cmd = {\n                dropIndexes: this.collection.collectionName,\n                index: this.indexName\n              };\n              return _context5.abrupt(\"return\", _get(_getPrototypeOf(DropIndexOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd));\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function execute(_x9, _x10) {\n        return _execute5.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return DropIndexOperation;\n}(command_1.CommandOperation);\nexports.DropIndexOperation = DropIndexOperation;\n/** @internal */\nvar ListIndexesOperation = /*#__PURE__*/function (_command_1$CommandOpe3) {\n  _inherits(ListIndexesOperation, _command_1$CommandOpe3);\n  var _super6 = _createSuper(ListIndexesOperation);\n  function ListIndexesOperation(collection, options) {\n    var _this5;\n    _classCallCheck(this, ListIndexesOperation);\n    _this5 = _super6.call(this, collection, options);\n    _this5.options = _objectSpread({}, options);\n    delete _this5.options.writeConcern;\n    _this5.collectionNamespace = collection.s.namespace;\n    return _this5;\n  }\n  _createClass(ListIndexesOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(server, session) {\n        var serverWireVersion, cursor, command;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              serverWireVersion = (0, utils_1.maxWireVersion)(server);\n              cursor = this.options.batchSize ? {\n                batchSize: this.options.batchSize\n              } : {};\n              command = {\n                listIndexes: this.collectionNamespace.collection,\n                cursor: cursor\n              }; // we check for undefined specifically here to allow falsy values\n              // eslint-disable-next-line no-restricted-syntax\n              if (serverWireVersion >= 9 && this.options.comment !== undefined) {\n                command.comment = this.options.comment;\n              }\n              return _context6.abrupt(\"return\", _get(_getPrototypeOf(ListIndexesOperation.prototype), \"executeCommand\", this).call(this, server, session, command));\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function execute(_x11, _x12) {\n        return _execute6.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return ListIndexesOperation;\n}(command_1.CommandOperation);\nexports.ListIndexesOperation = ListIndexesOperation;\n/** @internal */\nvar IndexExistsOperation = /*#__PURE__*/function (_operation_1$Abstract2) {\n  _inherits(IndexExistsOperation, _operation_1$Abstract2);\n  var _super7 = _createSuper(IndexExistsOperation);\n  function IndexExistsOperation(collection, indexes, options) {\n    var _this6;\n    _classCallCheck(this, IndexExistsOperation);\n    _this6 = _super7.call(this, options);\n    _this6.options = options;\n    _this6.collection = collection;\n    _this6.indexes = indexes;\n    return _this6;\n  }\n  _createClass(IndexExistsOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(server, session) {\n        var coll, indexes, info;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              coll = this.collection;\n              indexes = this.indexes;\n              _context7.next = 4;\n              return (0, common_functions_1.indexInformation)(coll.s.db, coll.collectionName, _objectSpread(_objectSpread({}, this.options), {}, {\n                readPreference: this.readPreference,\n                session: session\n              }));\n            case 4:\n              info = _context7.sent;\n              if (Array.isArray(indexes)) {\n                _context7.next = 7;\n                break;\n              }\n              return _context7.abrupt(\"return\", info[indexes] != null);\n            case 7:\n              return _context7.abrupt(\"return\", indexes.every(function (indexName) {\n                return info[indexName] != null;\n              }));\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function execute(_x13, _x14) {\n        return _execute7.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return IndexExistsOperation;\n}(operation_1.AbstractOperation);\nexports.IndexExistsOperation = IndexExistsOperation;\n/** @internal */\nvar IndexInformationOperation = /*#__PURE__*/function (_operation_1$Abstract3) {\n  _inherits(IndexInformationOperation, _operation_1$Abstract3);\n  var _super8 = _createSuper(IndexInformationOperation);\n  function IndexInformationOperation(db, name, options) {\n    var _this7;\n    _classCallCheck(this, IndexInformationOperation);\n    _this7 = _super8.call(this, options);\n    _this7.options = options !== null && options !== void 0 ? options : {};\n    _this7.db = db;\n    _this7.name = name;\n    return _this7;\n  }\n  _createClass(IndexInformationOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(server, session) {\n        var db, name;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              db = this.db;\n              name = this.name;\n              return _context8.abrupt(\"return\", (0, common_functions_1.indexInformation)(db, name, _objectSpread(_objectSpread({}, this.options), {}, {\n                readPreference: this.readPreference,\n                session: session\n              })));\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function execute(_x15, _x16) {\n        return _execute8.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return IndexInformationOperation;\n}(operation_1.AbstractOperation);\nexports.IndexInformationOperation = IndexInformationOperation;\n(0, operation_1.defineAspects)(ListIndexesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.CURSOR_CREATING]);\n(0, operation_1.defineAspects)(CreateIndexesOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(CreateIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(EnsureIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["error_1","require","read_preference_1","utils_1","command_1","common_functions_1","operation_1","VALID_INDEX_OPTIONS","Set","isIndexDirection","x","isSingleIndexTuple","t","Array","isArray","length","makeIndexSpec","indexSpec","options","key","Map","indexSpecs","_iterator","_createForOfIteratorHelper","_step","s","n","done","spec","value","set","_spec$","_iterator2","_step2","_step2$value","_slicedToArray","property","err","e","f","isObject","_i","_Object$entries","Object","entries","_Object$entries$_i","_objectSpread","IndexesOperation","_operation_1$Abstract","_inherits","_super","_createSuper","collection","_this","_classCallCheck","call","_createClass","_execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_server","session","coll","wrap","_callee$","_context","prev","next","abrupt","indexInformation","db","collectionName","full","readPreference","stop","execute","_x","_x2","apply","arguments","AbstractOperation","exports","CreateIndexesOperation","_command_1$CommandOpe","_super2","parent","indexes","_this2","map","userIndex","name","from","flat","join","validIndexOptions","fromEntries","filter","_ref","_ref2","optionName","has","_execute2","_callee2","server","serverWireVersion","cmd","indexNames","_callee2$","_context2","maxWireVersion","createIndexes","commitQuorum","MongoCompatibilityError","collation","undefined","_get","_getPrototypeOf","prototype","index","_x3","_x4","CommandOperation","CreateIndexOperation","_CreateIndexesOperati","_super3","_execute3","_callee3","_callee3$","_context3","sent","_x5","_x6","EnsureIndexOperation","_CreateIndexOperation","_super4","_this3","ReadPreference","primary","_execute4","_callee4","indexName","_callee4$","_context4","listIndexes","toArray","catch","error","MongoError","code","MONGODB_ERROR_CODES","NamespaceNotFound","some","_x7","_x8","DropIndexOperation","_command_1$CommandOpe2","_super5","_this4","_execute5","_callee5","_callee5$","_context5","dropIndexes","_x9","_x10","ListIndexesOperation","_command_1$CommandOpe3","_super6","_this5","writeConcern","collectionNamespace","namespace","_execute6","_callee6","cursor","command","_callee6$","_context6","batchSize","comment","_x11","_x12","IndexExistsOperation","_operation_1$Abstract2","_super7","_this6","_execute7","_callee7","info","_callee7$","_context7","every","_x13","_x14","IndexInformationOperation","_operation_1$Abstract3","_super8","_this7","_execute8","_callee8","_callee8$","_context8","_x15","_x16","defineAspects","Aspect","READ_OPERATION","RETRYABLE","CURSOR_CREATING","WRITE_OPERATION"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\operations\\indexes.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Db } from '../db';\nimport { MongoCompatibilityError, MONGODB_ERROR_CODES, MongoError } from '../error';\nimport { type OneOrMore } from '../mongo_types';\nimport { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { isObject, maxWireVersion, type MongoDBNamespace } from '../utils';\nimport {\n  type CollationOptions,\n  CommandOperation,\n  type CommandOperationOptions,\n  type OperationParent\n} from './command';\nimport { indexInformation, type IndexInformationOptions } from './common_functions';\nimport { AbstractOperation, Aspect, defineAspects } from './operation';\n\nconst VALID_INDEX_OPTIONS = new Set([\n  'background',\n  'unique',\n  'name',\n  'partialFilterExpression',\n  'sparse',\n  'hidden',\n  'expireAfterSeconds',\n  'storageEngine',\n  'collation',\n  'version',\n\n  // text indexes\n  'weights',\n  'default_language',\n  'language_override',\n  'textIndexVersion',\n\n  // 2d-sphere indexes\n  '2dsphereIndexVersion',\n\n  // 2d indexes\n  'bits',\n  'min',\n  'max',\n\n  // geoHaystack Indexes\n  'bucketSize',\n\n  // wildcard indexes\n  'wildcardProjection'\n]);\n\n/** @public */\nexport type IndexDirection =\n  | -1\n  | 1\n  | '2d'\n  | '2dsphere'\n  | 'text'\n  | 'geoHaystack'\n  | 'hashed'\n  | number;\n\nfunction isIndexDirection(x: unknown): x is IndexDirection {\n  return (\n    typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack'\n  );\n}\n/** @public */\nexport type IndexSpecification = OneOrMore<\n  | string\n  | [string, IndexDirection]\n  | { [key: string]: IndexDirection }\n  | Map<string, IndexDirection>\n>;\n\n/** @public */\nexport interface IndexDescription\n  extends Pick<\n    CreateIndexesOptions,\n    | 'background'\n    | 'unique'\n    | 'partialFilterExpression'\n    | 'sparse'\n    | 'hidden'\n    | 'expireAfterSeconds'\n    | 'storageEngine'\n    | 'version'\n    | 'weights'\n    | 'default_language'\n    | 'language_override'\n    | 'textIndexVersion'\n    | '2dsphereIndexVersion'\n    | 'bits'\n    | 'min'\n    | 'max'\n    | 'bucketSize'\n    | 'wildcardProjection'\n  > {\n  collation?: CollationOptions;\n  name?: string;\n  key: { [key: string]: IndexDirection } | Map<string, IndexDirection>;\n}\n\n/** @public */\nexport interface CreateIndexesOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** Creates the index in the background, yielding whenever possible. */\n  background?: boolean;\n  /** Creates an unique index. */\n  unique?: boolean;\n  /** Override the autogenerated index name (useful if the resulting name is larger than 128 bytes) */\n  name?: string;\n  /** Creates a partial index based on the given filter object (MongoDB 3.2 or higher) */\n  partialFilterExpression?: Document;\n  /** Creates a sparse index. */\n  sparse?: boolean;\n  /** Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher) */\n  expireAfterSeconds?: number;\n  /** Allows users to configure the storage engine on a per-index basis when creating an index. (MongoDB 3.0 or higher) */\n  storageEngine?: Document;\n  /** (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes. */\n  commitQuorum?: number | string;\n  /** Specifies the index version number, either 0 or 1. */\n  version?: number;\n  // text indexes\n  weights?: Document;\n  default_language?: string;\n  language_override?: string;\n  textIndexVersion?: number;\n  // 2d-sphere indexes\n  '2dsphereIndexVersion'?: number;\n  // 2d indexes\n  bits?: number;\n  /** For geospatial indexes set the lower bound for the co-ordinates. */\n  min?: number;\n  /** For geospatial indexes set the high bound for the co-ordinates. */\n  max?: number;\n  // geoHaystack Indexes\n  bucketSize?: number;\n  // wildcard indexes\n  wildcardProjection?: Document;\n  /** Specifies that the index should exist on the target collection but should not be used by the query planner when executing operations. (MongoDB 4.4 or higher) */\n  hidden?: boolean;\n}\n\nfunction isSingleIndexTuple(t: unknown): t is [string, IndexDirection] {\n  return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);\n}\n\nfunction makeIndexSpec(\n  indexSpec: IndexSpecification,\n  options?: CreateIndexesOptions\n): IndexDescription {\n  const key: Map<string, IndexDirection> = new Map();\n\n  const indexSpecs =\n    !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;\n\n  // Iterate through array and handle different types\n  for (const spec of indexSpecs) {\n    if (typeof spec === 'string') {\n      key.set(spec, 1);\n    } else if (Array.isArray(spec)) {\n      key.set(spec[0], spec[1] ?? 1);\n    } else if (spec instanceof Map) {\n      for (const [property, value] of spec) {\n        key.set(property, value);\n      }\n    } else if (isObject(spec)) {\n      for (const [property, value] of Object.entries(spec)) {\n        key.set(property, value);\n      }\n    }\n  }\n\n  return { ...options, key };\n}\n\n/** @internal */\nexport class IndexesOperation extends AbstractOperation<Document[]> {\n  override options: IndexInformationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: IndexInformationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  override async execute(_server: Server, session: ClientSession | undefined): Promise<Document[]> {\n    const coll = this.collection;\n    const options = this.options;\n\n    return indexInformation(coll.s.db, coll.collectionName, {\n      full: true,\n      ...options,\n      readPreference: this.readPreference,\n      session\n    });\n  }\n}\n\n/** @internal */\nexport class CreateIndexesOperation<\n  T extends string | string[] = string[]\n> extends CommandOperation<T> {\n  override options: CreateIndexesOptions;\n  collectionName: string;\n  indexes: ReadonlyArray<Omit<IndexDescription, 'key'> & { key: Map<string, IndexDirection> }>;\n\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexes: IndexDescription[],\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, options);\n\n    this.options = options ?? {};\n    this.collectionName = collectionName;\n    this.indexes = indexes.map(userIndex => {\n      // Ensure the key is a Map to preserve index key ordering\n      const key =\n        userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));\n      const name = userIndex.name != null ? userIndex.name : Array.from(key).flat().join('_');\n      const validIndexOptions = Object.fromEntries(\n        Object.entries({ ...userIndex }).filter(([optionName]) =>\n          VALID_INDEX_OPTIONS.has(optionName)\n        )\n      );\n      return {\n        ...validIndexOptions,\n        name,\n        key\n      };\n    });\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<T> {\n    const options = this.options;\n    const indexes = this.indexes;\n\n    const serverWireVersion = maxWireVersion(server);\n\n    const cmd: Document = { createIndexes: this.collectionName, indexes };\n\n    if (options.commitQuorum != null) {\n      if (serverWireVersion < 9) {\n        throw new MongoCompatibilityError(\n          'Option `commitQuorum` for `createIndexes` not supported on servers < 4.4'\n        );\n      }\n      cmd.commitQuorum = options.commitQuorum;\n    }\n\n    // collation is set on each index, it should not be defined at the root\n    this.options.collation = undefined;\n\n    await super.executeCommand(server, session, cmd);\n\n    const indexNames = indexes.map(index => index.name || '');\n    return indexNames as T;\n  }\n}\n\n/** @internal */\nexport class CreateIndexOperation extends CreateIndexesOperation<string> {\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, collectionName, [makeIndexSpec(indexSpec, options)], options);\n  }\n  override async execute(server: Server, session: ClientSession | undefined): Promise<string> {\n    const indexNames = await super.execute(server, session);\n    return indexNames[0];\n  }\n}\n\n/** @internal */\nexport class EnsureIndexOperation extends CreateIndexOperation {\n  db: Db;\n\n  constructor(\n    db: Db,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    super(db, collectionName, indexSpec, options);\n\n    this.readPreference = ReadPreference.primary;\n    this.db = db;\n    this.collectionName = collectionName;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<string> {\n    const indexName = this.indexes[0].name;\n    const indexes = await this.db\n      .collection(this.collectionName)\n      .listIndexes({ session })\n      .toArray()\n      .catch(error => {\n        if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound)\n          return [];\n        throw error;\n      });\n    if (indexName && indexes.some(index => index.name === indexName)) return indexName;\n    return super.execute(server, session);\n  }\n}\n\n/** @public */\nexport type DropIndexesOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropIndexOperation extends CommandOperation<Document> {\n  override options: DropIndexesOptions;\n  collection: Collection;\n  indexName: string;\n\n  constructor(collection: Collection, indexName: string, options?: DropIndexesOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.indexName = indexName;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<Document> {\n    const cmd = { dropIndexes: this.collection.collectionName, index: this.indexName };\n    return super.executeCommand(server, session, cmd);\n  }\n}\n\n/** @public */\nexport interface ListIndexesOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** The batchSize for the returned command cursor or if pre 2.8 the systems batch collection */\n  batchSize?: number;\n}\n\n/** @internal */\nexport class ListIndexesOperation extends CommandOperation<Document> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: ListIndexesOptions & { writeConcern?: never };\n  collectionNamespace: MongoDBNamespace;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<Document> {\n    const serverWireVersion = maxWireVersion(server);\n\n    const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n\n    const command: Document = { listIndexes: this.collectionNamespace.collection, cursor };\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (serverWireVersion >= 9 && this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    return super.executeCommand(server, session, command);\n  }\n}\n\n/** @internal */\nexport class IndexExistsOperation extends AbstractOperation<boolean> {\n  override options: IndexInformationOptions;\n  collection: Collection;\n  indexes: string | string[];\n\n  constructor(\n    collection: Collection,\n    indexes: string | string[],\n    options: IndexInformationOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.indexes = indexes;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<boolean> {\n    const coll = this.collection;\n    const indexes = this.indexes;\n\n    const info = await indexInformation(coll.s.db, coll.collectionName, {\n      ...this.options,\n      readPreference: this.readPreference,\n      session\n    });\n    // Let's check for the index names\n    if (!Array.isArray(indexes)) return info[indexes] != null;\n    // All keys found return true\n    return indexes.every(indexName => info[indexName] != null);\n  }\n}\n\n/** @internal */\nexport class IndexInformationOperation extends AbstractOperation<Document> {\n  override options: IndexInformationOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options?: IndexInformationOptions) {\n    super(options);\n    this.options = options ?? {};\n    this.db = db;\n    this.name = name;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<Document> {\n    const db = this.db;\n    const name = this.name;\n\n    return indexInformation(db, name, {\n      ...this.options,\n      readPreference: this.readPreference,\n      session\n    });\n  }\n}\n\ndefineAspects(ListIndexesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\ndefineAspects(CreateIndexesOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(CreateIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(EnsureIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexOperation, [Aspect.WRITE_OPERATION]);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}