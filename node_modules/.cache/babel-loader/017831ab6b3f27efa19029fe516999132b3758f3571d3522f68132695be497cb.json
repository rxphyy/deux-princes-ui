{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AwsServiceWorkflow = void 0;\nconst fs = require(\"fs\");\nconst error_1 = require(\"../../../error\");\nconst service_workflow_1 = require(\"./service_workflow\");\n/** Error for when the token is missing in the environment. */\nconst TOKEN_MISSING_ERROR = 'AWS_WEB_IDENTITY_TOKEN_FILE must be set in the environment.';\n/**\n * Device workflow implementation for AWS.\n *\n * @internal\n */\nclass AwsServiceWorkflow extends service_workflow_1.ServiceWorkflow {\n  constructor() {\n    super();\n  }\n  /**\n   * Get the token from the environment.\n   */\n  async getToken() {\n    const tokenFile = process.env.AWS_WEB_IDENTITY_TOKEN_FILE;\n    if (!tokenFile) {\n      throw new error_1.MongoAWSError(TOKEN_MISSING_ERROR);\n    }\n    return fs.promises.readFile(tokenFile, 'utf8');\n  }\n}\nexports.AwsServiceWorkflow = AwsServiceWorkflow;","map":{"version":3,"names":["fs","require","error_1","service_workflow_1","TOKEN_MISSING_ERROR","AwsServiceWorkflow","ServiceWorkflow","constructor","getToken","tokenFile","process","env","AWS_WEB_IDENTITY_TOKEN_FILE","MongoAWSError","promises","readFile","exports"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\cmap\\auth\\mongodb_oidc\\aws_service_workflow.ts"],"sourcesContent":["import * as fs from 'fs';\n\nimport { MongoAWSError } from '../../../error';\nimport { ServiceWorkflow } from './service_workflow';\n\n/** Error for when the token is missing in the environment. */\nconst TOKEN_MISSING_ERROR = 'AWS_WEB_IDENTITY_TOKEN_FILE must be set in the environment.';\n\n/**\n * Device workflow implementation for AWS.\n *\n * @internal\n */\nexport class AwsServiceWorkflow extends ServiceWorkflow {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(): Promise<string> {\n    const tokenFile = process.env.AWS_WEB_IDENTITY_TOKEN_FILE;\n    if (!tokenFile) {\n      throw new MongoAWSError(TOKEN_MISSING_ERROR);\n    }\n    return fs.promises.readFile(tokenFile, 'utf8');\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,EAAA,GAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AACA,MAAAE,kBAAA,GAAAF,OAAA;AAEA;AACA,MAAMG,mBAAmB,GAAG,6DAA6D;AAEzF;;;;;AAKA,MAAaC,kBAAmB,SAAQF,kBAAA,CAAAG,eAAe;EACrDC,YAAA;IACE,KAAK,EAAE;EACT;EAEA;;;EAGA,MAAMC,QAAQA,CAAA;IACZ,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;IACzD,IAAI,CAACH,SAAS,EAAE;MACd,MAAM,IAAIP,OAAA,CAAAW,aAAa,CAACT,mBAAmB,CAAC;;IAE9C,OAAOJ,EAAE,CAACc,QAAQ,CAACC,QAAQ,CAACN,SAAS,EAAE,MAAM,CAAC;EAChD;;AAdFO,OAAA,CAAAX,kBAAA,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}