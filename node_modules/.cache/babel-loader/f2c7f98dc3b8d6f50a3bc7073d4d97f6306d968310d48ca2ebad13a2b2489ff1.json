{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmacSha256Hook = exports.hmacSha512Hook = exports.aes256CtrDecryptHook = exports.aes256CtrEncryptHook = exports.aes256CbcDecryptHook = exports.aes256CbcEncryptHook = exports.signRsaSha256Hook = exports.makeHmacHook = exports.sha256Hook = exports.randomHook = exports.makeAES256Hook = void 0;\nconst crypto = require(\"crypto\");\nfunction makeAES256Hook(method, mode) {\n  return function (key, iv, input, output) {\n    let result;\n    try {\n      const cipher = crypto[method](mode, key, iv);\n      cipher.setAutoPadding(false);\n      result = cipher.update(input);\n      const final = cipher.final();\n      if (final.length > 0) {\n        result = Buffer.concat([result, final]);\n      }\n    } catch (e) {\n      return e;\n    }\n    result.copy(output);\n    return result.length;\n  };\n}\nexports.makeAES256Hook = makeAES256Hook;\nfunction randomHook(buffer, count) {\n  try {\n    crypto.randomFillSync(buffer, 0, count);\n  } catch (e) {\n    return e;\n  }\n  return count;\n}\nexports.randomHook = randomHook;\nfunction sha256Hook(input, output) {\n  let result;\n  try {\n    result = crypto.createHash('sha256').update(input).digest();\n  } catch (e) {\n    return e;\n  }\n  result.copy(output);\n  return result.length;\n}\nexports.sha256Hook = sha256Hook;\nfunction makeHmacHook(algorithm) {\n  return (key, input, output) => {\n    let result;\n    try {\n      result = crypto.createHmac(algorithm, key).update(input).digest();\n    } catch (e) {\n      return e;\n    }\n    result.copy(output);\n    return result.length;\n  };\n}\nexports.makeHmacHook = makeHmacHook;\nfunction signRsaSha256Hook(key, input, output) {\n  let result;\n  try {\n    const signer = crypto.createSign('sha256WithRSAEncryption');\n    const privateKey = Buffer.from(`-----BEGIN PRIVATE KEY-----\\n${key.toString('base64')}\\n-----END PRIVATE KEY-----\\n`);\n    result = signer.update(input).end().sign(privateKey);\n  } catch (e) {\n    return e;\n  }\n  result.copy(output);\n  return result.length;\n}\nexports.signRsaSha256Hook = signRsaSha256Hook;\nexports.aes256CbcEncryptHook = makeAES256Hook('createCipheriv', 'aes-256-cbc');\nexports.aes256CbcDecryptHook = makeAES256Hook('createDecipheriv', 'aes-256-cbc');\nexports.aes256CtrEncryptHook = makeAES256Hook('createCipheriv', 'aes-256-ctr');\nexports.aes256CtrDecryptHook = makeAES256Hook('createDecipheriv', 'aes-256-ctr');\nexports.hmacSha512Hook = makeHmacHook('sha512');\nexports.hmacSha256Hook = makeHmacHook('sha256');","map":{"version":3,"names":["crypto","require","makeAES256Hook","method","mode","key","iv","input","output","result","cipher","setAutoPadding","update","final","length","Buffer","concat","e","copy","exports","randomHook","buffer","count","randomFillSync","sha256Hook","createHash","digest","makeHmacHook","algorithm","createHmac","signRsaSha256Hook","signer","createSign","privateKey","from","toString","end","sign","aes256CbcEncryptHook","aes256CbcDecryptHook","aes256CtrEncryptHook","aes256CtrDecryptHook","hmacSha512Hook","hmacSha256Hook"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\client-side-encryption\\crypto_callbacks.ts"],"sourcesContent":["import * as crypto from 'crypto';\n\ntype AES256Callback = (key: Buffer, iv: Buffer, input: Buffer, output: Buffer) => number | Error;\n\nexport function makeAES256Hook(\n  method: 'createCipheriv' | 'createDecipheriv',\n  mode: 'aes-256-cbc' | 'aes-256-ctr'\n): AES256Callback {\n  return function (key: Buffer, iv: Buffer, input: Buffer, output: Buffer): number | Error {\n    let result;\n\n    try {\n      const cipher = crypto[method](mode, key, iv);\n      cipher.setAutoPadding(false);\n      result = cipher.update(input);\n      const final = cipher.final();\n      if (final.length > 0) {\n        result = Buffer.concat([result, final]);\n      }\n    } catch (e) {\n      return e;\n    }\n\n    result.copy(output);\n    return result.length;\n  };\n}\n\nexport function randomHook(buffer: Buffer, count: number): number | Error {\n  try {\n    crypto.randomFillSync(buffer, 0, count);\n  } catch (e) {\n    return e;\n  }\n  return count;\n}\n\nexport function sha256Hook(input: Buffer, output: Buffer): number | Error {\n  let result;\n  try {\n    result = crypto.createHash('sha256').update(input).digest();\n  } catch (e) {\n    return e;\n  }\n\n  result.copy(output);\n  return result.length;\n}\n\ntype HMACHook = (key: Buffer, input: Buffer, output: Buffer) => number | Error;\nexport function makeHmacHook(algorithm: 'sha512' | 'sha256'): HMACHook {\n  return (key: Buffer, input: Buffer, output: Buffer): number | Error => {\n    let result;\n    try {\n      result = crypto.createHmac(algorithm, key).update(input).digest();\n    } catch (e) {\n      return e;\n    }\n\n    result.copy(output);\n    return result.length;\n  };\n}\n\nexport function signRsaSha256Hook(key: Buffer, input: Buffer, output: Buffer): number | Error {\n  let result;\n  try {\n    const signer = crypto.createSign('sha256WithRSAEncryption');\n    const privateKey = Buffer.from(\n      `-----BEGIN PRIVATE KEY-----\\n${key.toString('base64')}\\n-----END PRIVATE KEY-----\\n`\n    );\n\n    result = signer.update(input).end().sign(privateKey);\n  } catch (e) {\n    return e;\n  }\n\n  result.copy(output);\n  return result.length;\n}\n\nexport const aes256CbcEncryptHook = makeAES256Hook('createCipheriv', 'aes-256-cbc');\nexport const aes256CbcDecryptHook = makeAES256Hook('createDecipheriv', 'aes-256-cbc');\nexport const aes256CtrEncryptHook = makeAES256Hook('createCipheriv', 'aes-256-ctr');\nexport const aes256CtrDecryptHook = makeAES256Hook('createDecipheriv', 'aes-256-ctr');\nexport const hmacSha512Hook = makeHmacHook('sha512');\nexport const hmacSha256Hook = makeHmacHook('sha256');\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}