{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatSort = void 0;\nvar error_1 = require(\"./error\");\n/** @internal */\nfunction prepareDirection() {\n  var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var value = \"\".concat(direction).toLowerCase();\n  if (isMeta(direction)) return direction;\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new error_1.MongoInvalidArgumentError(\"Invalid sort direction: \".concat(JSON.stringify(direction)));\n  }\n}\n/** @internal */\nfunction isMeta(t) {\n  return typeof t === 'object' && t != null && '$meta' in t && typeof t.$meta === 'string';\n}\n/** @internal */\nfunction isPair(t) {\n  if (Array.isArray(t) && t.length === 2) {\n    try {\n      prepareDirection(t[1]);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction isDeep(t) {\n  return Array.isArray(t) && Array.isArray(t[0]);\n}\nfunction isMap(t) {\n  return t instanceof Map && t.size > 0;\n}\n/** @internal */\nfunction pairToMap(v) {\n  return new Map([[\"\".concat(v[0]), prepareDirection([v[1]])]]);\n}\n/** @internal */\nfunction deepToMap(t) {\n  var sortEntries = t.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      k = _ref2[0],\n      v = _ref2[1];\n    return [\"\".concat(k), prepareDirection(v)];\n  });\n  return new Map(sortEntries);\n}\n/** @internal */\nfunction stringsToMap(t) {\n  var sortEntries = t.map(function (key) {\n    return [\"\".concat(key), 1];\n  });\n  return new Map(sortEntries);\n}\n/** @internal */\nfunction objectToMap(t) {\n  var sortEntries = Object.entries(t).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      k = _ref4[0],\n      v = _ref4[1];\n    return [\"\".concat(k), prepareDirection(v)];\n  });\n  return new Map(sortEntries);\n}\n/** @internal */\nfunction mapToMap(t) {\n  var sortEntries = Array.from(t).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      k = _ref6[0],\n      v = _ref6[1];\n    return [\"\".concat(k), prepareDirection(v)];\n  });\n  return new Map(sortEntries);\n}\n/** converts a Sort type into a type that is valid for the server (SortForCmd) */\nfunction formatSort(sort, direction) {\n  if (sort == null) return undefined;\n  if (typeof sort === 'string') return new Map([[sort, prepareDirection(direction)]]);\n  if (typeof sort !== 'object') {\n    throw new error_1.MongoInvalidArgumentError(\"Invalid sort format: \".concat(JSON.stringify(sort), \" Sort must be a valid object\"));\n  }\n  if (!Array.isArray(sort)) {\n    return isMap(sort) ? mapToMap(sort) : Object.keys(sort).length ? objectToMap(sort) : undefined;\n  }\n  if (!sort.length) return undefined;\n  if (isDeep(sort)) return deepToMap(sort);\n  if (isPair(sort)) return pairToMap(sort);\n  return stringsToMap(sort);\n}\nexports.formatSort = formatSort;","map":{"version":3,"names":["error_1","require","prepareDirection","direction","arguments","length","undefined","value","concat","toLowerCase","isMeta","MongoInvalidArgumentError","JSON","stringify","t","$meta","isPair","Array","isArray","e","isDeep","isMap","Map","size","pairToMap","v","deepToMap","sortEntries","map","_ref","_ref2","_slicedToArray","k","stringsToMap","key","objectToMap","Object","entries","_ref3","_ref4","mapToMap","from","_ref5","_ref6","formatSort","sort","keys","exports"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\sort.ts"],"sourcesContent":["import { MongoInvalidArgumentError } from './error';\n\n/** @public */\nexport type SortDirection =\n  | 1\n  | -1\n  | 'asc'\n  | 'desc'\n  | 'ascending'\n  | 'descending'\n  | { $meta: string };\n\n/** @public */\nexport type Sort =\n  | string\n  | Exclude<SortDirection, { $meta: string }>\n  | string[]\n  | { [key: string]: SortDirection }\n  | Map<string, SortDirection>\n  | [string, SortDirection][]\n  | [string, SortDirection];\n\n/** Below stricter types were created for sort that correspond with type that the cmd takes  */\n\n/** @internal */\nexport type SortDirectionForCmd = 1 | -1 | { $meta: string };\n\n/** @internal */\nexport type SortForCmd = Map<string, SortDirectionForCmd>;\n\n/** @internal */\ntype SortPairForCmd = [string, SortDirectionForCmd];\n\n/** @internal */\nfunction prepareDirection(direction: any = 1): SortDirectionForCmd {\n  const value = `${direction}`.toLowerCase();\n  if (isMeta(direction)) return direction;\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new MongoInvalidArgumentError(`Invalid sort direction: ${JSON.stringify(direction)}`);\n  }\n}\n\n/** @internal */\nfunction isMeta(t: SortDirection): t is { $meta: string } {\n  return typeof t === 'object' && t != null && '$meta' in t && typeof t.$meta === 'string';\n}\n\n/** @internal */\nfunction isPair(t: Sort): t is [string, SortDirection] {\n  if (Array.isArray(t) && t.length === 2) {\n    try {\n      prepareDirection(t[1]);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  return false;\n}\n\nfunction isDeep(t: Sort): t is [string, SortDirection][] {\n  return Array.isArray(t) && Array.isArray(t[0]);\n}\n\nfunction isMap(t: Sort): t is Map<string, SortDirection> {\n  return t instanceof Map && t.size > 0;\n}\n\n/** @internal */\nfunction pairToMap(v: [string, SortDirection]): SortForCmd {\n  return new Map([[`${v[0]}`, prepareDirection([v[1]])]]);\n}\n\n/** @internal */\nfunction deepToMap(t: [string, SortDirection][]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(([k, v]) => [`${k}`, prepareDirection(v)]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction stringsToMap(t: string[]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(key => [`${key}`, 1]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction objectToMap(t: { [key: string]: SortDirection }): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Object.entries(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction mapToMap(t: Map<string, SortDirection>): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Array.from(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** converts a Sort type into a type that is valid for the server (SortForCmd) */\nexport function formatSort(\n  sort: Sort | undefined,\n  direction?: SortDirection\n): SortForCmd | undefined {\n  if (sort == null) return undefined;\n  if (typeof sort === 'string') return new Map([[sort, prepareDirection(direction)]]);\n  if (typeof sort !== 'object') {\n    throw new MongoInvalidArgumentError(\n      `Invalid sort format: ${JSON.stringify(sort)} Sort must be a valid object`\n    );\n  }\n  if (!Array.isArray(sort)) {\n    return isMap(sort) ? mapToMap(sort) : Object.keys(sort).length ? objectToMap(sort) : undefined;\n  }\n  if (!sort.length) return undefined;\n  if (isDeep(sort)) return deepToMap(sort);\n  if (isPair(sort)) return pairToMap(sort);\n  return stringsToMap(sort);\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAiCA;AACA,SAASC,gBAAgBA,CAAA,EAAmB;EAAA,IAAlBC,SAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,CAAC;EAC1C,IAAMG,KAAK,GAAG,GAAAC,MAAA,CAAGL,SAAS,EAAGM,WAAW,EAAE;EAC1C,IAAIC,MAAM,CAACP,SAAS,CAAC,EAAE,OAAOA,SAAS;EACvC,QAAQI,KAAK;IACX,KAAK,WAAW;IAChB,KAAK,KAAK;IACV,KAAK,GAAG;MACN,OAAO,CAAC;IACV,KAAK,YAAY;IACjB,KAAK,MAAM;IACX,KAAK,IAAI;MACP,OAAO,CAAC,CAAC;IACX;MACE,MAAM,IAAIP,OAAA,CAAAW,yBAAyB,4BAAAH,MAAA,CAA4BI,IAAI,CAACC,SAAS,CAACV,SAAS,CAAC,CAAE,CAAC;;AAEjG;AAEA;AACA,SAASO,MAAMA,CAACI,CAAgB;EAC9B,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,IAAI,IAAI,IAAI,OAAO,IAAIA,CAAC,IAAI,OAAOA,CAAC,CAACC,KAAK,KAAK,QAAQ;AAC1F;AAEA;AACA,SAASC,MAAMA,CAACF,CAAO;EACrB,IAAIG,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,IAAIA,CAAC,CAACT,MAAM,KAAK,CAAC,EAAE;IACtC,IAAI;MACFH,gBAAgB,CAACY,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,OAAO,IAAI;KACZ,CAAC,OAAOK,CAAC,EAAE;MACV,OAAO,KAAK;;;EAGhB,OAAO,KAAK;AACd;AAEA,SAASC,MAAMA,CAACN,CAAO;EACrB,OAAOG,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD;AAEA,SAASO,KAAKA,CAACP,CAAO;EACpB,OAAOA,CAAC,YAAYQ,GAAG,IAAIR,CAAC,CAACS,IAAI,GAAG,CAAC;AACvC;AAEA;AACA,SAASC,SAASA,CAACC,CAA0B;EAC3C,OAAO,IAAIH,GAAG,CAAC,CAAC,IAAAd,MAAA,CAAIiB,CAAC,CAAC,CAAC,CAAC,GAAIvB,gBAAgB,CAAC,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD;AAEA;AACA,SAASC,SAASA,CAACZ,CAA4B;EAC7C,IAAMa,WAAW,GAAqBb,CAAC,CAACc,GAAG,CAAC,UAAAC,IAAA;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAEG,CAAC,GAAAF,KAAA;MAAEL,CAAC,GAAAK,KAAA;IAAA,OAAM,IAAAtB,MAAA,CAAIwB,CAAC,GAAI9B,gBAAgB,CAACuB,CAAC,CAAC,CAAC;EAAA,EAAC;EACtF,OAAO,IAAIH,GAAG,CAACK,WAAW,CAAC;AAC7B;AAEA;AACA,SAASM,YAAYA,CAACnB,CAAW;EAC/B,IAAMa,WAAW,GAAqBb,CAAC,CAACc,GAAG,CAAC,UAAAM,GAAG;IAAA,OAAI,IAAA1B,MAAA,CAAI0B,GAAG,GAAI,CAAC,CAAC;EAAA,EAAC;EACjE,OAAO,IAAIZ,GAAG,CAACK,WAAW,CAAC;AAC7B;AAEA;AACA,SAASQ,WAAWA,CAACrB,CAAmC;EACtD,IAAMa,WAAW,GAAqBS,MAAM,CAACC,OAAO,CAACvB,CAAC,CAAC,CAACc,GAAG,CAAC,UAAAU,KAAA;IAAA,IAAAC,KAAA,GAAAR,cAAA,CAAAO,KAAA;MAAEN,CAAC,GAAAO,KAAA;MAAEd,CAAC,GAAAc,KAAA;IAAA,OAAM,IAAA/B,MAAA,CACnEwB,CAAC,GACJ9B,gBAAgB,CAACuB,CAAC,CAAC,CACpB;EAAA,EAAC;EACF,OAAO,IAAIH,GAAG,CAACK,WAAW,CAAC;AAC7B;AAEA;AACA,SAASa,QAAQA,CAAC1B,CAA6B;EAC7C,IAAMa,WAAW,GAAqBV,KAAK,CAACwB,IAAI,CAAC3B,CAAC,CAAC,CAACc,GAAG,CAAC,UAAAc,KAAA;IAAA,IAAAC,KAAA,GAAAZ,cAAA,CAAAW,KAAA;MAAEV,CAAC,GAAAW,KAAA;MAAElB,CAAC,GAAAkB,KAAA;IAAA,OAAM,IAAAnC,MAAA,CAC/DwB,CAAC,GACJ9B,gBAAgB,CAACuB,CAAC,CAAC,CACpB;EAAA,EAAC;EACF,OAAO,IAAIH,GAAG,CAACK,WAAW,CAAC;AAC7B;AAEA;AACA,SAAgBiB,UAAUA,CACxBC,IAAsB,EACtB1C,SAAyB;EAEzB,IAAI0C,IAAI,IAAI,IAAI,EAAE,OAAOvC,SAAS;EAClC,IAAI,OAAOuC,IAAI,KAAK,QAAQ,EAAE,OAAO,IAAIvB,GAAG,CAAC,CAAC,CAACuB,IAAI,EAAE3C,gBAAgB,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;EACnF,IAAI,OAAO0C,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAI7C,OAAA,CAAAW,yBAAyB,yBAAAH,MAAA,CACTI,IAAI,CAACC,SAAS,CAACgC,IAAI,CAAC,iCAA8B,CAC3E;;EAEH,IAAI,CAAC5B,KAAK,CAACC,OAAO,CAAC2B,IAAI,CAAC,EAAE;IACxB,OAAOxB,KAAK,CAACwB,IAAI,CAAC,GAAGL,QAAQ,CAACK,IAAI,CAAC,GAAGT,MAAM,CAACU,IAAI,CAACD,IAAI,CAAC,CAACxC,MAAM,GAAG8B,WAAW,CAACU,IAAI,CAAC,GAAGvC,SAAS;;EAEhG,IAAI,CAACuC,IAAI,CAACxC,MAAM,EAAE,OAAOC,SAAS;EAClC,IAAIc,MAAM,CAACyB,IAAI,CAAC,EAAE,OAAOnB,SAAS,CAACmB,IAAI,CAAC;EACxC,IAAI7B,MAAM,CAAC6B,IAAI,CAAC,EAAE,OAAOrB,SAAS,CAACqB,IAAI,CAAC;EACxC,OAAOZ,YAAY,CAACY,IAAI,CAAC;AAC3B;AAlBAE,OAAA,CAAAH,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}