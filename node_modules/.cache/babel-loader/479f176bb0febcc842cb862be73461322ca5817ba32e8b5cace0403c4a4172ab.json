{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/raphm/Documents/Projects/youtube-transcript/youtube-transcript/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BulkWriteOperation = void 0;\nvar operation_1 = require(\"./operation\");\n/** @internal */\nvar BulkWriteOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(BulkWriteOperation, _operation_1$Abstract);\n  var _super = _createSuper(BulkWriteOperation);\n  function BulkWriteOperation(collection, operations, options) {\n    var _this;\n    _classCallCheck(this, BulkWriteOperation);\n    _this = _super.call(this, options);\n    _this.options = options;\n    _this.collection = collection;\n    _this.operations = operations;\n    return _this;\n  }\n  _createClass(BulkWriteOperation, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(server, session) {\n        var coll, operations, options, bulk, i, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              coll = this.collection;\n              operations = this.operations;\n              options = _objectSpread(_objectSpread(_objectSpread({}, this.options), this.bsonOptions), {}, {\n                readPreference: this.readPreference\n              }); // Create the bulk operation\n              bulk = options.ordered === false ? coll.initializeUnorderedBulkOp(options) : coll.initializeOrderedBulkOp(options); // for each op go through and add to the bulk\n              for (i = 0; i < operations.length; i++) {\n                bulk.raw(operations[i]);\n              }\n              // Execute the bulk\n              _context.next = 7;\n              return bulk.execute(_objectSpread(_objectSpread({}, options), {}, {\n                session: session\n              }));\n            case 7:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result);\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return BulkWriteOperation;\n}(operation_1.AbstractOperation);\nexports.BulkWriteOperation = BulkWriteOperation;\n(0, operation_1.defineAspects)(BulkWriteOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["operation_1","require","BulkWriteOperation","_operation_1$Abstract","_inherits","_super","_createSuper","collection","operations","options","_this","_classCallCheck","call","_createClass","key","value","_execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","server","session","coll","bulk","i","result","wrap","_callee$","_context","prev","next","_objectSpread","bsonOptions","readPreference","ordered","initializeUnorderedBulkOp","initializeOrderedBulkOp","length","raw","execute","sent","abrupt","stop","_x","_x2","apply","arguments","AbstractOperation","exports","defineAspects","Aspect","WRITE_OPERATION"],"sources":["C:\\Users\\raphm\\Documents\\Projects\\youtube-transcript\\youtube-transcript\\node_modules\\mongodb\\src\\operations\\bulk_write.ts"],"sourcesContent":["import type {\n  AnyBulkWriteOperation,\n  BulkOperationBase,\n  BulkWriteOptions,\n  BulkWriteResult\n} from '../bulk/common';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { AbstractOperation, Aspect, defineAspects } from './operation';\n\n/** @internal */\nexport class BulkWriteOperation extends AbstractOperation<BulkWriteResult> {\n  override options: BulkWriteOptions;\n  collection: Collection;\n  operations: AnyBulkWriteOperation[];\n\n  constructor(\n    collection: Collection,\n    operations: AnyBulkWriteOperation[],\n    options: BulkWriteOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.operations = operations;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined\n  ): Promise<BulkWriteResult> {\n    const coll = this.collection;\n    const operations = this.operations;\n    const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n\n    // Create the bulk operation\n    const bulk: BulkOperationBase =\n      options.ordered === false\n        ? coll.initializeUnorderedBulkOp(options)\n        : coll.initializeOrderedBulkOp(options);\n\n    // for each op go through and add to the bulk\n    for (let i = 0; i < operations.length; i++) {\n      bulk.raw(operations[i]);\n    }\n\n    // Execute the bulk\n    const result = await bulk.execute({ ...options, session });\n    return result;\n  }\n}\n\ndefineAspects(BulkWriteOperation, [Aspect.WRITE_OPERATION]);\n"],"mappings":";;;;;;;;;;;;;AASA,IAAAA,WAAA,GAAAC,OAAA;AAEA;AAAA,IACaC,kBAAmB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,kBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,kBAAA;EAK9B,SAAAA,mBACEK,UAAsB,EACtBC,UAAmC,EACnCC,OAAyB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,kBAAA;IAEzBQ,KAAA,GAAAL,MAAA,CAAAO,IAAA,OAAMH,OAAO;IACbC,KAAA,CAAKD,OAAO,GAAGA,OAAO;IACtBC,KAAA,CAAKH,UAAU,GAAGA,UAAU;IAC5BG,KAAA,CAAKF,UAAU,GAAGA,UAAU;IAAC,OAAAE,KAAA;EAC/B;EAACG,YAAA,CAAAX,kBAAA;IAAAY,GAAA;IAAAC,KAAA;MAAA,IAAAC,QAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAEQ,SAAAC,QACPC,MAAc,EACdC,OAAkC;QAAA,IAAAC,IAAA,EAAAf,UAAA,EAAAC,OAAA,EAAAe,IAAA,EAAAC,CAAA,EAAAC,MAAA;QAAA,OAAAR,mBAAA,GAAAS,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAE5BR,IAAI,GAAG,IAAI,CAAChB,UAAU;cACtBC,UAAU,GAAG,IAAI,CAACA,UAAU;cAC5BC,OAAO,GAAAuB,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAACvB,OAAO,GAAK,IAAI,CAACwB,WAAW;gBAAEC,cAAc,EAAE,IAAI,CAACA;cAAc,IAE3F;cACMV,IAAI,GACRf,OAAO,CAAC0B,OAAO,KAAK,KAAK,GACrBZ,IAAI,CAACa,yBAAyB,CAAC3B,OAAO,CAAC,GACvCc,IAAI,CAACc,uBAAuB,CAAC5B,OAAO,CAAC,EAE3C;cACA,KAASgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,UAAU,CAAC8B,MAAM,EAAEb,CAAC,EAAE,EAAE;gBAC1CD,IAAI,CAACe,GAAG,CAAC/B,UAAU,CAACiB,CAAC,CAAC,CAAC;;cAGzB;cAAAI,QAAA,CAAAE,IAAA;cAAA,OACqBP,IAAI,CAACgB,OAAO,CAAAR,aAAA,CAAAA,aAAA,KAAMvB,OAAO;gBAAEa,OAAO,EAAPA;cAAO,EAAE,CAAC;YAAA;cAApDI,MAAM,GAAAG,QAAA,CAAAY,IAAA;cAAA,OAAAZ,QAAA,CAAAa,MAAA,WACLhB,MAAM;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA,CACd;MAAA,SAAAoB,QAAAI,EAAA,EAAAC,GAAA;QAAA,OAAA7B,QAAA,CAAA8B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAP,OAAA;IAAA;EAAA;EAAA,OAAAtC,kBAAA;AAAA,EAtCqCF,WAAA,CAAAgD,iBAAkC;AAA1EC,OAAA,CAAA/C,kBAAA,GAAAA,kBAAA;AAyCA,IAAAF,WAAA,CAAAkD,aAAa,EAAChD,kBAAkB,EAAE,CAACF,WAAA,CAAAmD,MAAM,CAACC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}